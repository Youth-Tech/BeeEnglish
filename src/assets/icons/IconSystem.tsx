import * as React from 'react'
import Svg, { SvgProps, Path, ClipPath, Defs, G, Rect } from 'react-native-svg'
import { colors, ColorsMode } from '@themes'

export interface Props extends SvgProps {
  fill?: ColorsMode | string
  stroke?: ColorsMode | string
  strokeWidth?: number
  size?: number
  width?: number
  height?: number
}

const myColors = colors.dark

const initialState: Props = {
  fill: myColors.black,
  stroke: myColors.black,
  size: 24,
}
const LeftArrow = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => {
  console.log(props)
  return (
    <Svg
      width={props.size || props.width || 24}
      height={props.size || props.height || 24}
      fill="none"
      {...props}
    >
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="m15 18-6-6 6-6"
      />
    </Svg>
  )
}

const RightArrow = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="m9 18 6-6-6-6"
    />
  </Svg>
)

const Profile = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2M16 7a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Microphone = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 20}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      d="M18.316 8.333V10c0 1.547-.71 3.03-1.976 4.124-1.266 1.094-2.982 1.709-4.772 1.709m0 0c-1.79 0-3.506-.615-4.771-1.709C5.53 13.03 4.82 11.547 4.82 10V8.333m6.748 7.5v3.333m-3.856 0h7.712M11.568.833c-.767 0-1.502.263-2.045.732-.542.47-.847 1.105-.847 1.768V10c0 .663.305 1.299.847 1.767.543.47 1.278.733 2.045.733.767 0 1.503-.264 2.045-.733.543-.468.847-1.104.847-1.767V3.333c0-.663-.305-1.299-.847-1.768-.542-.469-1.278-.732-2.045-.732Z"
    />
  </Svg>
)

const SendPaper = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 22}
    height={props.size || props.height || 22}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M20.167 1.833 10.084 11.916M20.167 1.833l-6.416 18.333-3.667-8.25M20.167 1.833 1.834 8.25l8.25 3.666"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h22v22H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Setting = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 22}
    height={props.size || props.height || 22}
    fill="none"
    {...props}
  >
    <G
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      clipPath="url(#a)"
    >
      <Path d="M11 13.75a2.75 2.75 0 1 0 0-5.5 2.75 2.75 0 0 0 0 5.5Z" />
      <Path d="M17.783 13.75a1.513 1.513 0 0 0 .302 1.669l.055.055a1.832 1.832 0 0 1 0 2.594 1.834 1.834 0 0 1-2.594 0l-.055-.055a1.512 1.512 0 0 0-1.668-.303 1.512 1.512 0 0 0-.917 1.384v.156a1.833 1.833 0 1 1-3.667 0v-.082a1.513 1.513 0 0 0-.99-1.384 1.511 1.511 0 0 0-1.668.302l-.055.055a1.835 1.835 0 1 1-2.594-2.594l.055-.055a1.512 1.512 0 0 0 .302-1.668 1.512 1.512 0 0 0-1.384-.917H2.75a1.833 1.833 0 0 1 0-3.667h.083a1.512 1.512 0 0 0 1.384-.99 1.513 1.513 0 0 0-.302-1.668l-.055-.055a1.833 1.833 0 1 1 2.594-2.594l.055.055a1.513 1.513 0 0 0 1.668.302h.073a1.513 1.513 0 0 0 .917-1.384V2.75a1.833 1.833 0 1 1 3.667 0v.083a1.513 1.513 0 0 0 .916 1.384 1.512 1.512 0 0 0 1.669-.303l.055-.055a1.833 1.833 0 1 1 2.594 2.595l-.055.055a1.513 1.513 0 0 0-.303 1.668v.073a1.512 1.512 0 0 0 1.384.917h.156a1.833 1.833 0 0 1 0 3.667h-.082a1.511 1.511 0 0 0-1.384.916Z" />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h22v22H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const MenuHeading = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M3 12h14M3 6h18M3 18h18"
    />
  </Svg>
)

const Comment = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M9.907 16.875c4.104 0 7.43-3.078 7.43-6.875s-3.326-6.875-7.43-6.875c-4.104 0-7.43 3.078-7.43 6.875 0 1.697.664 3.25 1.765 4.449.418.455.73 1.046.553 1.638-.149.496-.396.949-.72 1.335a4.855 4.855 0 0 0 .878.078 4.9 4.9 0 0 0 2.845-.906c.668.183 1.376.281 2.109.281Z"
    />
  </Svg>
)

const MuteAudio = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.width || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.905A9.76 9.76 0 0 0 1.5 12c0 .898.121 1.768.35 2.595.341 1.24 1.518 1.905 2.659 1.905h1.93l4.5 4.5c.945.945 2.561.276 2.561-1.06V4.06ZM17.78 9.22a.75.75 0 1 0-1.06 1.06L18.44 12l-1.72 1.72a.75.75 0 0 0 1.06 1.06l1.72-1.72 1.72 1.72a.75.75 0 1 0 1.06-1.06L20.56 12l1.72-1.72a.75.75 0 0 0-1.06-1.06l-1.72 1.72-1.72-1.72Z"
    />
  </Svg>
)

const WaveAudio = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.905A9.76 9.76 0 0 0 1.5 12c0 .898.121 1.768.35 2.595.341 1.24 1.518 1.905 2.659 1.905h1.93l4.5 4.5c.945.945 2.561.276 2.561-1.06V4.06ZM18.584 5.106a.75.75 0 0 1 1.06 0c3.808 3.807 3.808 9.98 0 13.788a.75.75 0 1 1-1.06-1.06 8.25 8.25 0 0 0 0-11.668.75.75 0 0 1 0-1.06Z"
    />
    <Path
      fill={fill}
      d="M15.932 7.757a.75.75 0 0 1 1.061 0 6 6 0 0 1 0 8.486.75.75 0 0 1-1.06-1.061 4.5 4.5 0 0 0 0-6.364.75.75 0 0 1 0-1.06Z"
    />
  </Svg>
)

const Bookmark = ({
  fill = 'transparent',
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 10}
    height={props.size || props.height || 10}
    viewBox="0 0 10 10"
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      stroke={stroke}
      strokeWidth={1.5}
      strokeLinecap="round"
      strokeLinejoin="round"
      d="M7.33055 1.38434C7.78913 1.43756 8.125 1.83292 8.125 2.29458V8.75L5 7.1875L1.875 8.75V2.29458C1.875 1.83292 2.21087 1.43756 2.66945 1.38434C3.43398 1.29561 4.21167 1.25 5 1.25C5.78833 1.25 6.56602 1.29561 7.33055 1.38434Z"
    />
  </Svg>
)

const Player = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill="#1D1B3E"
      d="M0 1.944v20.112c0 1.534 1.689 2.465 2.99 1.63l15.802-10.055c1.203-.757 1.203-2.505 0-3.281L2.99.313C1.689-.52 0 .41 0 1.944Z"
    />
  </Svg>
)

const RePlay = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill={fill}
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        fill="#1D1B3E"
        d="M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const DisLike = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    fill={fill}
    {...props}
  >
    <Path
      fill="#1D1B3E"
      d="M17.356 12.96c.334-.43.495-.891.474-1.366a2.11 2.11 0 0 0-.443-1.184c.221-.558.307-1.435-.433-2.117-.542-.5-1.463-.723-2.739-.66-.896.04-1.646.21-1.677.216h-.004c-.17.031-.35.069-.535.11-.014-.22.024-.767.426-2 .478-1.466.45-2.588-.088-3.338-.566-.789-1.47-.85-1.736-.85a.853.853 0 0 0-.658.302c-.379.444-.334 1.264-.287 1.642-.45 1.219-1.711 4.206-2.779 5.036-.02.014-.037.03-.054.048a3.7 3.7 0 0 0-.669 1.012 1.397 1.397 0 0 0-.675-.172H3.4c-.784 0-1.419.644-1.419 1.432v5.593c0 .791.638 1.432 1.419 1.432h2.08c.304 0 .587-.097.819-.262l.8.096c.124.018 2.306.297 4.546.252.406.03.788.048 1.143.048a7.58 7.58 0 0 0 1.585-.145c1.044-.223 1.756-.67 2.118-1.328a2.124 2.124 0 0 0 .232-1.319c.678-.619.798-1.304.774-1.786a2.343 2.343 0 0 0-.14-.692ZM3.4 17.166a.5.5 0 0 1-.498-.502v-5.597a.5.5 0 0 1 .498-.502h2.08a.5.5 0 0 1 .498.502v5.593a.5.5 0 0 1-.498.503H3.4v.003Zm13.084-4.608a.466.466 0 0 0-.061.56c0 .004.14.245.157.575.023.451-.191.85-.641 1.191a.472.472 0 0 0-.157.53c0 .004.146.458-.092.888-.229.413-.737.71-1.508.875-.617.134-1.456.158-2.486.076h-.047c-2.193.048-4.41-.241-4.433-.245H7.21l-.344-.041c.02-.097.03-.2.03-.303v-5.597a1.47 1.47 0 0 0-.064-.427c.061-.23.232-.743.634-1.18 1.531-1.225 3.028-5.36 3.093-5.538a.44.44 0 0 0 .02-.23c-.057-.386-.037-.858.045-.999.18.003.668.055.961.465.348.485.335 1.352-.04 2.502-.573 1.752-.621 2.674-.168 3.08a.738.738 0 0 0 .744.135 9.55 9.55 0 0 1 .593-.12l.044-.011c1.047-.23 2.923-.372 3.574.227.553.51.16 1.184.116 1.256a.463.463 0 0 0 .082.6c.003.003.361.344.378.801.014.307-.13.62-.426.93Z"
    />
  </Svg>
)
const Like = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M3.399 17.166a.5.5 0 0 1-.498-.502v-5.597a.5.5 0 0 1 .498-.502h2.08a.5.5 0 0 1 .498.502v5.593a.5.5 0 0 1-.498.503H3.4v.003ZM16.483 12.558a.466.466 0 0 0-.061.56c0 .004.14.245.157.575.023.451-.191.85-.641 1.191a.472.472 0 0 0-.157.53c0 .004.146.458-.092.888-.229.413-.737.71-1.508.875-.617.134-1.456.158-2.486.076h-.047c-2.193.048-4.41-.241-4.433-.245H7.21l-.344-.041c.02-.097.03-.2.03-.303v-5.597a1.47 1.47 0 0 0-.064-.427c.061-.23.232-.743.634-1.18 1.531-1.225 3.028-5.36 3.093-5.538a.44.44 0 0 0 .02-.23c-.057-.386-.037-.858.045-.999.18.003.668.055.961.465.348.485.335 1.352-.04 2.502-.573 1.752-.621 2.674-.168 3.08a.738.738 0 0 0 .744.135 9.55 9.55 0 0 1 .593-.12l.044-.011c1.047-.23 2.923-.372 3.574.227.553.51.16 1.184.116 1.256a.463.463 0 0 0 .082.6h.001c.027.027.358.357.377.796v.005c.014.307-.13.62-.426.93Z"
    />
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M17.356 12.96c.334-.43.495-.891.474-1.366a2.11 2.11 0 0 0-.443-1.184c.221-.558.307-1.435-.433-2.117-.542-.5-1.463-.723-2.739-.66a10.61 10.61 0 0 0-1.677.216h-.004c-.17.031-.35.069-.535.11-.014-.22.024-.767.426-2 .478-1.466.45-2.588-.088-3.338-.566-.789-1.47-.85-1.736-.85a.853.853 0 0 0-.658.302c-.379.444-.334 1.264-.287 1.642-.45 1.219-1.711 4.206-2.779 5.036-.02.014-.037.03-.054.048a3.7 3.7 0 0 0-.669 1.012 1.397 1.397 0 0 0-.675-.172H3.4c-.784 0-1.419.644-1.419 1.432v5.593c0 .791.638 1.432 1.419 1.432h2.08c.304 0 .587-.097.819-.262l.8.096c.124.018 2.306.297 4.546.252.406.03.788.048 1.143.048a7.58 7.58 0 0 0 1.585-.145c1.044-.223 1.756-.67 2.118-1.328a2.124 2.124 0 0 0 .232-1.319c.678-.619.798-1.304.774-1.786a2.343 2.343 0 0 0-.14-.692ZM2.901 16.664a.5.5 0 0 0 .498.502v-.003h2.08a.5.5 0 0 0 .498-.503v-5.593a.5.5 0 0 0-.498-.502H3.4a.5.5 0 0 0-.498.502v5.597Zm13.52-3.545a.466.466 0 0 1 .062-.561c.297-.31.44-.623.426-.93v-.005c-.019-.439-.35-.77-.377-.795l-.001-.002a.463.463 0 0 1-.082-.599c.044-.072.437-.746-.116-1.256-.651-.599-2.527-.458-3.573-.227l-.045.01a9.55 9.55 0 0 0-.593.12.738.738 0 0 1-.744-.134c-.453-.406-.405-1.328.168-3.08.375-1.15.388-2.017.04-2.502-.293-.41-.78-.462-.961-.465-.082.141-.102.613-.044.998a.44.44 0 0 1-.021.23c-.065.18-1.562 4.314-3.093 5.539-.402.437-.573.95-.634 1.18.04.135.065.28.065.427v5.597c0 .103-.01.206-.031.303l.344.041h.004c.024.004 2.24.293 4.433.245h.047c1.03.082 1.87.058 2.486-.076.771-.165 1.28-.462 1.508-.875.238-.43.092-.884.092-.887a.472.472 0 0 1 .157-.53c.45-.341.664-.74.64-1.191-.016-.331-.156-.572-.156-.575Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Cancel = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 23}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M5.24 5.47a.697.697 0 0 1 1.016 0l5.24 5.47 5.24-5.47a.697.697 0 0 1 1.017 0c.28.293.28.767 0 1.06L12.513 12l5.24 5.47c.28.293.28.767 0 1.06a.697.697 0 0 1-1.016 0l-5.24-5.47-5.241 5.47a.697.697 0 0 1-1.016 0 .773.773 0 0 1 0-1.06L10.48 12 5.24 6.53a.773.773 0 0 1 0-1.06Z"
      clipRule="evenodd"
    />
  </Svg>
)

const SendComment = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 25}
    height={props.size || props.height || 25}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M11.979 12.5H5.644h6.335Zm-6.515.83-1.047 3.127c-.573 1.712-.86 2.569-.654 3.096.179.458.562.805 1.036.937.545.152 1.368-.218 3.015-.96l10.557-4.75c1.607-.723 2.41-1.085 2.659-1.587a1.563 1.563 0 0 0 0-1.385c-.248-.502-1.052-.864-2.66-1.588L7.797 5.462c-1.642-.739-2.463-1.108-3.007-.957a1.562 1.562 0 0 0-1.036.935c-.207.526.077 1.38.644 3.09l1.069 3.22c.097.293.146.44.165.59.017.133.017.268 0 .401-.02.15-.069.296-.167.59Z"
    />
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={0.5}
      d="M11.979 12.5H5.644m-.18.83-1.047 3.127c-.573 1.712-.86 2.569-.654 3.096.179.458.562.805 1.036.937.545.152 1.368-.218 3.015-.96l10.557-4.75c1.607-.723 2.41-1.085 2.659-1.587a1.563 1.563 0 0 0 0-1.385c-.248-.502-1.052-.864-2.66-1.588L7.797 5.462c-1.642-.739-2.463-1.108-3.007-.957a1.562 1.562 0 0 0-1.036.935c-.207.526.077 1.38.644 3.09l1.069 3.22c.097.293.146.44.165.59.017.133.017.268 0 .401-.02.15-.069.296-.167.59Z"
    />
  </Svg>
)

const PenBrush = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M20.6 1.5c-.376 0-.743.111-1.056.32l-5.079 3.385a18.747 18.747 0 0 0-3.472 2.987 10.04 10.04 0 0 1 4.815 4.815 18.752 18.752 0 0 0 2.987-3.472l3.386-5.079A1.902 1.902 0 0 0 20.6 1.5Zm-8.3 14.025c.657-.365 1.29-.769 1.896-1.207a8.026 8.026 0 0 0-4.513-4.513A18.75 18.75 0 0 0 8.476 11.7l-.279.5a5.26 5.26 0 0 1 3.602 3.602l.501-.278ZM6.75 13.5A3.75 3.75 0 0 0 3 17.25a1.5 1.5 0 0 1-1.6 1.497.75.75 0 0 0-.7 1.123 5.25 5.25 0 0 0 9.8-2.62 3.75 3.75 0 0 0-3.75-3.75Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Password = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M7 11V7a5 5 0 1 1 10 0v4M5 11h14a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Crown = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 21}
    height={props.size || props.height || 14}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M19.605 4.231a.55.55 0 0 1-.015.167l-1.259 4.934a.57.57 0 0 1-.552.425l-7.553.037H2.67a.57.57 0 0 1-.555-.425L.856 4.416a.549.549 0 0 1-.015-.171A1.182 1.182 0 0 1 0 3.122c0-.65.539-1.178 1.202-1.178.662 0 1.201.528 1.201 1.178 0 .365-.17.692-.438.909L3.54 5.587a2.164 2.164 0 0 0 3.224-.214l2.59-3.363a1.162 1.162 0 0 1-.353-.832c0-.65.54-1.178 1.202-1.178.663 0 1.202.528 1.202 1.178 0 .314-.128.6-.334.812l.002.002 2.572 3.373c.4.526 1.04.84 1.711.84.57 0 1.107-.217 1.51-.613l1.587-1.554a1.167 1.167 0 0 1-.449-.917c0-.649.539-1.177 1.202-1.177.662 0 1.201.528 1.201 1.178 0 .512-.336.947-.803 1.109Zm-1.397 7.32c0-.31-.256-.56-.572-.56h-14.8a.567.567 0 0 0-.573.56v1.346c0 .31.257.56.573.56h14.8a.567.567 0 0 0 .572-.56v-1.346Z"
    />
  </Svg>
)

const Notification = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M13.73 21a2 2 0 0 1-3.46 0M18 8A6 6 0 1 0 6 8c0 7-3 9-3 9h18s-3-2-3-9Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Agree = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 18}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M23.417.527c.755.725.78 1.924.056 2.68L10.146 17.1a1.895 1.895 0 0 1-2.77-.038L.492 9.484a1.895 1.895 0 0 1 2.805-2.547l5.52 6.076L20.736.583a1.895 1.895 0 0 1 2.68-.056Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Lock = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 30}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M12 0C7.03 0 3 4.335 3 9.682V12h-.457c-1.326 0-2.47 1.07-2.519 2.394C-.158 19.455.401 30 12 30c11.576 0 12.156-10.556 11.977-15.605C23.93 13.07 22.787 12 21.46 12H21V9.682C21 4.335 16.97 0 12 0Zm6.428 12V9.682c0-3.82-2.878-6.916-6.428-6.916S5.571 5.862 5.571 9.682V12h12.857Zm-5.786 8.89a1.927 1.927 0 0 0 1.26-1.819c0-1.065-.847-1.928-1.894-1.928-1.046 0-1.895.863-1.895 1.928 0 .841.529 1.556 1.266 1.82v2.049a.631.631 0 1 0 1.263 0v-2.05Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Logout = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4m7 14 5-5m0 0-5-5m5 5H9"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)
const StartOutLine = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="m12 2 3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2Z"
    />
  </Svg>
)

const StartFill = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 21}
    height={props.size || props.height || 19}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        fill={fill}
        d="m11.17.96 2.299 4.232c.16.295.469.499.826.546l5.139.679c.9.119 1.259 1.124.608 1.7l-3.718 3.295a.943.943 0 0 0-.316.882l.878 4.652c.154.815-.787 1.436-1.592 1.051l-4.596-2.196a1.197 1.197 0 0 0-1.021 0L5.08 17.997c-.805.385-1.746-.236-1.592-1.051l.877-4.652a.942.942 0 0 0-.315-.882L.333 8.117C-.32 7.54.04 6.535.94 6.417l5.138-.68c.358-.046.667-.25.827-.545L9.204.96C9.606.22 10.768.22 11.17.96Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h20.375v18.518H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const About = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3m.08 4h.01M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const History = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        fill={fill}
        d="M13 3a9 9 0 0 0-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0 0 13 21a9 9 0 0 0 0-18Zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Dictionary = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20M4 19.5A2.5 2.5 0 0 0 6.5 22H20V2H6.5A2.5 2.5 0 0 0 4 4.5v15Z"
    />
  </Svg>
)

const ShowPassword = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 17}
    height={props.size || props.height || 12}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M11.146 5.932c0 .715-.28 1.4-.778 1.906a2.633 2.633 0 0 1-1.876.79 2.633 2.633 0 0 1-1.877-.79 2.718 2.718 0 0 1-.777-1.906c0-.715.28-1.401.777-1.907a2.633 2.633 0 0 1 1.877-.79c.704 0 1.379.284 1.876.79.498.506.778 1.192.778 1.907Z"
    />
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M0 5.932S3.184 0 8.492 0c5.307 0 8.491 5.932 8.491 5.932s-3.184 5.932-8.491 5.932C3.184 11.864 0 5.932 0 5.932Zm8.492 3.775c.985 0 1.93-.398 2.626-1.106a3.806 3.806 0 0 0 1.089-2.669 3.806 3.806 0 0 0-1.089-2.67 3.685 3.685 0 0 0-2.626-1.105c-.986 0-1.93.398-2.627 1.106a3.806 3.806 0 0 0-1.088 2.67c0 1 .39 1.96 1.088 2.668a3.685 3.685 0 0 0 2.627 1.106Z"
      clipRule="evenodd"
    />
  </Svg>
)

const HidePassword = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 17}
    height={props.size || props.height || 17}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="m8.38 6.375 2.246 2.238V8.5A2.125 2.125 0 0 0 8.5 6.375h-.12Zm-3.046.567L6.432 8.04a1.951 1.951 0 0 0-.056.46A2.125 2.125 0 0 0 8.5 10.625c.155 0 .311-.021.46-.057l1.098 1.098a3.51 3.51 0 0 1-1.558.376A3.542 3.542 0 0 1 4.959 8.5c0-.56.142-1.084.375-1.558ZM1.417 3.025 3.032 4.64l.32.318A8.382 8.382 0 0 0 .708 8.5c1.225 3.11 4.25 5.313 7.792 5.313a8.342 8.342 0 0 0 3.102-.596l.305.298 2.068 2.068.9-.9L2.316 2.126m6.185 2.833A3.542 3.542 0 0 1 12.042 8.5c0 .453-.092.893-.255 1.29l2.076 2.075a8.39 8.39 0 0 0 2.43-3.365c-1.226-3.11-4.25-5.313-7.792-5.313-.992 0-1.941.178-2.834.496l1.537 1.523a3.576 3.576 0 0 1 1.297-.248Z"
    />
  </Svg>
)

const BackGame = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M14.56 15c-.213 0-.397-.176-.433-.42-.317-2.117-2.11-5.813-6.658-6.029v2.717a.558.558 0 0 1-.065.262.469.469 0 0 1-.174.185.393.393 0 0 1-.456-.038L.184 6.294a.49.49 0 0 1-.135-.179.562.562 0 0 1 0-.46.49.49 0 0 1 .135-.179L6.774.094A.393.393 0 0 1 7.23.056a.47.47 0 0 1 .173.185c.042.079.065.17.065.262V3.26C10.28 3.58 15 5.902 15 14.497c0 .262-.175.48-.403.501a.41.41 0 0 1-.037.002Z"
    />
  </Svg>
)

const Back = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M19.5 12h-15m0 0 6.75 6.75M4.5 12l6.75-6.75"
    />
  </Svg>
)
const Home = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <Path
      d="M16.3474 6.3301C16.2544 6.24109 16.1305 6.19141 16.0018 6.19141C15.873 6.19141 15.7492 6.24109 15.6562 6.3301L4.1499 17.322C4.10104 17.3687 4.06216 17.4249 4.03563 17.4871C4.00909 17.5493 3.99545 17.6162 3.99553 17.6838L3.99365 28.0001C3.99365 28.5305 4.20437 29.0392 4.57944 29.4143C4.95451 29.7894 5.46322 30.0001 5.99365 30.0001H11.9999C12.2651 30.0001 12.5195 29.8947 12.707 29.7072C12.8945 29.5197 12.9999 29.2653 12.9999 29.0001V20.5001C12.9999 20.3675 13.0526 20.2403 13.1463 20.1465C13.2401 20.0528 13.3673 20.0001 13.4999 20.0001H18.4999C18.6325 20.0001 18.7597 20.0528 18.8535 20.1465C18.9472 20.2403 18.9999 20.3675 18.9999 20.5001V29.0001C18.9999 29.2653 19.1053 29.5197 19.2928 29.7072C19.4803 29.8947 19.7347 30.0001 19.9999 30.0001H26.0037C26.5341 30.0001 27.0428 29.7894 27.4179 29.4143C27.7929 29.0392 28.0037 28.5305 28.0037 28.0001V17.6838C28.0037 17.6162 27.9901 17.5493 27.9636 17.4871C27.937 17.4249 27.8981 17.3687 27.8493 17.322L16.3474 6.3301Z"
      fill={fill}
    />
    <Path
      d="M30.6819 15.2594L26.0069 10.7869V4C26.0069 3.73478 25.9015 3.48043 25.714 3.29289C25.5265 3.10536 25.2721 3 25.0069 3H22.0069C21.7417 3 21.4873 3.10536 21.2998 3.29289C21.1123 3.48043 21.0069 3.73478 21.0069 4V6L17.3869 2.53875C17.0481 2.19625 16.5444 2 16 2C15.4575 2 14.955 2.19625 14.6163 2.53938L1.32252 15.2581C0.933774 15.6331 0.885024 16.25 1.23877 16.6562C1.32761 16.7588 1.43637 16.8422 1.55846 16.9014C1.68055 16.9605 1.8134 16.9942 1.94892 17.0004C2.08445 17.0066 2.21982 16.9852 2.3468 16.9374C2.47378 16.8896 2.5897 16.8165 2.68752 16.7225L15.6563 4.33C15.7493 4.24099 15.8731 4.19131 16.0019 4.19131C16.1307 4.19131 16.2545 4.24099 16.3475 4.33L29.3175 16.7225C29.5086 16.9057 29.7645 17.0057 30.0291 17.0006C30.2938 16.9954 30.5456 16.8855 30.7294 16.695C31.1131 16.2975 31.0813 15.6412 30.6819 15.2594Z"
      fill={fill}
    />
  </Svg>
)
const Dumbell = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <Path
      d="M11.1735 27.4246L4.57753 20.8273C3.37086 19.6219 2.76819 19.0193 2.68286 18.2833C2.66366 18.1189 2.66366 17.9529 2.68286 17.7886C2.76819 17.0526 3.37086 16.4486 4.57619 15.2433C5.78286 14.0379 6.38553 13.4353 7.12153 13.3499C7.28553 13.3299 7.45219 13.3299 7.61486 13.3499C8.35219 13.4353 8.95486 14.0379 10.1615 15.2433L11.1389 16.2219L16.2215 11.1379L15.2442 10.1606C14.0375 8.95525 13.4349 8.35259 13.3495 7.61659C13.3303 7.45226 13.3303 7.28625 13.3495 7.12192C13.4349 6.38592 14.0375 5.78325 15.2429 4.57659C16.4495 3.37125 17.0522 2.76859 17.7882 2.68325C17.9521 2.66418 18.1176 2.66418 18.2815 2.68325C19.0189 2.76859 19.6215 3.37125 20.8282 4.57659L27.4255 11.1766C28.6322 12.3819 29.2349 12.9846 29.3202 13.7206C29.3402 13.8846 29.3402 14.0513 29.3202 14.2139C29.2349 14.9513 28.6322 15.5539 27.4269 16.7606C26.2202 17.9646 25.6175 18.5673 24.8815 18.6539C24.7176 18.673 24.5521 18.673 24.3882 18.6539C23.6509 18.5673 23.0482 17.9646 21.8415 16.7606L20.3602 15.2766L15.2762 20.3606L16.7589 21.8433C17.9655 23.0486 18.5682 23.6513 18.6535 24.3873C18.6735 24.5513 18.6735 24.7179 18.6535 24.8806C18.5682 25.6179 17.9655 26.2206 16.7602 27.4273C15.5535 28.6313 14.9509 29.2339 14.2149 29.3206C14.051 29.3397 13.8854 29.3397 13.7215 29.3206C12.9842 29.2339 12.3815 28.6313 11.1749 27.4273L11.1735 27.4246Z"
      fill={fill}
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M23.3174 2.62417C23.4103 2.53125 23.5206 2.45753 23.6419 2.40724C23.7633 2.35694 23.8934 2.33105 24.0248 2.33105C24.1562 2.33105 24.2862 2.35694 24.4076 2.40724C24.529 2.45753 24.6392 2.53125 24.7321 2.62417L28.8708 6.76284C29.0474 6.95241 29.1436 7.20314 29.139 7.4622C29.1344 7.72127 29.0295 7.96845 28.8463 8.15167C28.6631 8.33489 28.4159 8.43984 28.1568 8.44441C27.8977 8.44898 27.647 8.35281 27.4574 8.17617L23.3174 4.03751C23.1302 3.85001 23.025 3.59584 23.025 3.33084C23.025 3.06584 23.1302 2.81168 23.3174 2.62417ZM2.62411 23.3175C2.81161 23.1302 3.06577 23.0251 3.33078 23.0251C3.59578 23.0251 3.84994 23.1302 4.03744 23.3175L8.17611 27.4562C8.35275 27.6457 8.44891 27.8965 8.44434 28.1555C8.43977 28.4146 8.33482 28.6618 8.15161 28.845C7.96839 29.0282 7.72121 29.1332 7.46214 29.1377C7.20307 29.1423 6.95234 29.0462 6.76278 28.8695L2.62278 24.7308C2.43551 24.5433 2.33032 24.2892 2.33032 24.0242C2.33032 23.7592 2.43551 23.505 2.62278 23.3175H2.62411Z"
      fill={fill}
    />
  </Svg>
)
const GamePad = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <Path
      d="M30.1957 15.3363C28.87 9.3432 26.875 6.14445 23.9157 5.2707C23.2936 5.08823 22.6483 4.99707 22 5.00007C21.1432 5.00007 20.3969 5.20882 19.6075 5.43007C18.6563 5.69695 17.5757 6.00007 16 6.00007C14.4244 6.00007 13.3432 5.69757 12.39 5.4307C11.6 5.20882 10.8544 5.00007 10 5.00007C9.32969 4.99775 8.66226 5.08862 8.01692 5.27007C5.07317 6.14007 3.07942 9.33757 1.73442 15.3326C0.288172 21.7838 1.00005 25.8569 3.73067 26.8019C4.10497 26.9339 4.4988 27.0019 4.89567 27.0032C6.7663 27.0032 8.2663 25.4451 9.2913 24.1694C10.4494 22.7257 11.805 21.9932 16 21.9932C19.7469 21.9932 21.2975 22.5013 22.6369 24.1694C23.4788 25.2182 24.2744 25.9519 25.0682 26.4138C26.1238 27.0276 27.1788 27.1638 28.2032 26.8119C29.8169 26.2613 30.7419 24.8057 30.9532 22.4844C31.1138 20.7044 30.8663 18.3663 30.1957 15.3363ZM13 15.0001H11V17.0001C11 17.2653 10.8947 17.5196 10.7072 17.7072C10.5196 17.8947 10.2653 18.0001 10 18.0001C9.73483 18.0001 9.48048 17.8947 9.29294 17.7072C9.1054 17.5196 9.00005 17.2653 9.00005 17.0001V15.0001H7.00005C6.73483 15.0001 6.48048 14.8947 6.29294 14.7072C6.1054 14.5196 6.00005 14.2653 6.00005 14.0001C6.00005 13.7349 6.1054 13.4805 6.29294 13.293C6.48048 13.1054 6.73483 13.0001 7.00005 13.0001H9.00005V11.0001C9.00005 10.7349 9.1054 10.4805 9.29294 10.293C9.48048 10.1054 9.73483 10.0001 10 10.0001C10.2653 10.0001 10.5196 10.1054 10.7072 10.293C10.8947 10.4805 11 10.7349 11 11.0001V13.0001H13C13.2653 13.0001 13.5196 13.1054 13.7072 13.293C13.8947 13.4805 14 13.7349 14 14.0001C14 14.2653 13.8947 14.5196 13.7072 14.7072C13.5196 14.8947 13.2653 15.0001 13 15.0001ZM18.25 15.2501C18.0028 15.2501 17.7611 15.1768 17.5556 15.0394C17.35 14.9021 17.1898 14.7068 17.0952 14.4784C17.0006 14.25 16.9758 13.9987 17.0241 13.7562C17.0723 13.5137 17.1913 13.291 17.3662 13.1162C17.541 12.9414 17.7637 12.8223 18.0062 12.7741C18.2487 12.7259 18.5 12.7506 18.7284 12.8452C18.9568 12.9398 19.152 13.1 19.2894 13.3056C19.4267 13.5112 19.5 13.7528 19.5 14.0001C19.5 14.3316 19.3684 14.6495 19.1339 14.884C18.8995 15.1184 18.5816 15.2501 18.25 15.2501ZM21 18.0001C20.7527 18.0001 20.5109 17.9267 20.3053 17.7892C20.0996 17.6517 19.9394 17.4563 19.8449 17.2277C19.7504 16.9991 19.7258 16.7476 19.7743 16.5051C19.8228 16.2625 19.9421 16.0398 20.1173 15.8651C20.2924 15.6904 20.5154 15.5716 20.7581 15.5237C21.0008 15.4758 21.2522 15.501 21.4806 15.5961C21.7089 15.6912 21.9039 15.8519 22.0409 16.0579C22.1779 16.2639 22.2507 16.5058 22.25 16.7532C22.2492 17.0842 22.1172 17.4013 21.8828 17.6351C21.6485 17.8688 21.331 18.0001 21 18.0001ZM21 12.5001C20.7528 12.5001 20.5111 12.4268 20.3056 12.2894C20.1 12.1521 19.9398 11.9568 19.8452 11.7284C19.7506 11.5 19.7258 11.2487 19.7741 11.0062C19.8223 10.7637 19.9413 10.541 20.1162 10.3662C20.291 10.1914 20.5137 10.0723 20.7562 10.0241C20.9987 9.97586 21.25 10.0006 21.4784 10.0952C21.7068 10.1898 21.902 10.35 22.0394 10.5556C22.1767 10.7612 22.25 11.0028 22.25 11.2501C22.25 11.5816 22.1184 11.8995 21.8839 12.134C21.6495 12.3684 21.3316 12.5001 21 12.5001ZM23.75 15.2501C23.5028 15.2501 23.2611 15.1768 23.0556 15.0394C22.85 14.9021 22.6898 14.7068 22.5952 14.4784C22.5006 14.25 22.4758 13.9987 22.5241 13.7562C22.5723 13.5137 22.6913 13.291 22.8662 13.1162C23.041 12.9414 23.2637 12.8223 23.5062 12.7741C23.7487 12.7259 24 12.7506 24.2284 12.8452C24.4568 12.9398 24.652 13.1 24.7894 13.3056C24.9267 13.5112 25 13.7528 25 14.0001C25 14.3316 24.8684 14.6495 24.6339 14.884C24.3995 15.1184 24.0816 15.2501 23.75 15.2501Z"
      fill={fill}
    />
  </Svg>
)
const User = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <G clipPath="url(#clip0_1158_5352)">
      <Path
        d="M21.3333 18.667C23.0513 18.6671 24.7029 19.3304 25.9437 20.5185C27.1845 21.7067 27.9188 23.328 27.9933 25.0443L28 25.3337V26.667C28.0002 27.3398 27.7461 27.9877 27.2887 28.4811C26.8312 28.9744 26.2042 29.2765 25.5333 29.327L25.3333 29.3337H6.66667C5.9939 29.3339 5.34591 29.0798 4.8526 28.6223C4.35929 28.1649 4.05712 27.5379 4.00667 26.867L4 26.667V25.3337C4.0001 23.6157 4.66339 21.9641 5.85155 20.7233C7.0397 19.4825 8.661 18.7482 10.3773 18.6737L10.6667 18.667H21.3333ZM16 2.66699C17.7681 2.66699 19.4638 3.36937 20.714 4.61961C21.9643 5.86986 22.6667 7.56555 22.6667 9.33366C22.6667 11.1018 21.9643 12.7975 20.714 14.0477C19.4638 15.2979 17.7681 16.0003 16 16.0003C14.2319 16.0003 12.5362 15.2979 11.286 14.0477C10.0357 12.7975 9.33333 11.1018 9.33333 9.33366C9.33333 7.56555 10.0357 5.86986 11.286 4.61961C12.5362 3.36937 14.2319 2.66699 16 2.66699Z"
        fill={fill}
      />
    </G>
    <Defs>
      <ClipPath id="clip0_1158_5352">
        <Rect width={32} height={32} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)
const Tree = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={20} height={16} viewBox="0 0 20 16" fill="none" {...props}>
    <Path
      d="M0.187265 7.40203C0.973783 7.11556 1.7603 6.78385 2.56554 6.5426C3.42697 6.2712 4.32584 6.1355 5.26217 6.16566C7.603 6.25613 9.28839 7.68851 9.26966 9.57323C9.26966 9.92002 9.58801 10.0708 9.75655 10.3271C9.79401 10.2668 9.79401 10.2216 9.79401 10.1763C9.75655 9.73908 9.75655 9.30183 9.70037 8.87965C9.53184 7.32665 9.00749 5.84903 8.20225 4.41664C8.10861 4.25079 7.9588 4.16032 7.75281 4.10001C6.94756 3.87384 6.36704 3.45167 6.01124 2.83348C5.52435 1.98913 5.48689 1.09954 5.69288 0.209954C5.73034 0.0290206 5.89888 -0.0463682 6.1236 0.0290205C7.02247 0.360731 7.8839 0.752752 8.57678 1.35586C9.34457 2.03436 9.58801 2.80332 9.21348 3.69291C9.17603 3.78338 9.21348 3.904 9.25094 3.97939C9.68165 4.73327 10.0562 5.48716 10.2996 6.28628C10.3745 6.49737 10.4307 6.69338 10.5056 6.90447H10.5993C10.6367 6.75369 10.7491 6.60291 10.7303 6.45214C10.6554 5.92442 10.7116 5.42685 10.9176 4.92929C11.4419 3.60244 12.9026 2.71286 14.6816 2.63747C15.8801 2.57716 17.0225 2.77317 18.1461 3.0898C18.764 3.27073 19.3446 3.48182 20 3.69291C19.9064 3.73814 19.8876 3.75322 19.8689 3.7683C19.4944 3.93415 19.1011 4.08493 18.764 4.29602C18.0337 4.74835 17.5468 5.36654 17.1161 5.9998C16.7041 6.60291 16.1423 7.0854 15.3558 7.37188C14.1948 7.79406 13.0337 7.7639 11.8727 7.40203C11.6854 7.34172 11.6105 7.3568 11.5356 7.50758C11.236 8.09561 11.0487 8.69872 11.0112 9.31691C10.9363 10.1914 10.8989 11.0659 10.8614 11.9404C10.8614 12.0007 10.8614 12.046 10.8427 12.1063C11.1985 12.1666 11.4981 12.3325 11.6667 12.5737C12.603 12.3174 13.4644 12.5285 14.0824 13.222C14.9438 13.0713 15.6929 13.3125 16.4045 13.7196C15.7491 14.3679 14.9064 14.7449 13.97 14.9258C12.9775 15.1068 11.9476 15.1972 10.9363 15.3329C10.0375 15.4535 9.44035 15.3329 8.38066 15.3329C5.57839 15.2018 5.44944 14.7298 3.98877 14.0815C4.28839 13.6744 4.68165 13.4181 5.14981 13.222C5.93633 12.8903 6.7603 12.8903 7.58427 13.1165C7.84644 12.4682 8.42697 12.242 9.10112 12.1515L8.98876 11.5183C8.93258 11.2167 8.8015 10.9151 8.55805 10.6437C8.03371 10.8548 7.47191 11.0358 6.85393 11.0961C6.91011 11.0207 6.94757 10.9755 6.98502 10.9302C6.81648 11.0207 6.68539 11.1262 6.46067 11.1413C4.88764 11.1715 3.68914 10.6287 2.80899 9.58831C2.58427 9.33199 2.34082 9.06059 2.0412 8.86458C1.49813 8.47255 0.917604 8.12577 0.33708 7.7639L0 7.58297C0.0936337 7.46235 0.149813 7.41711 0.187265 7.40203Z"
      fill={fill}
    />
  </Svg>
)
const Fire = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <Path
      d="M26 19.3399C26 25.4399 20.95 30.3449 14.85 29.9809C8.58101 29.6069 4.29001 23.5779 5.09801 17.2759C5.58701 13.4429 7.38401 10.1559 9.34001 7.60594C9.68001 7.16094 10.029 10.7419 10.378 10.3479C10.728 9.94294 13.972 4.32894 15.1 2.35694C15.1485 2.26996 15.2152 2.19444 15.2955 2.13551C15.3758 2.07658 15.4678 2.03562 15.5653 2.01541C15.6628 1.9952 15.7636 1.99622 15.8607 2.0184C15.9577 2.04058 16.0489 2.08339 16.128 2.14394C18.394 3.85394 26 10.2769 26 19.3399Z"
      fill="#FF6723"
    />
    <Path
      d="M23 21.851C23 25.893 19.481 29.142 15.201 28.995C10.581 28.839 7.41299 24.611 8.09099 20.256C9.06999 14.012 15.48 10 15.48 10C15.48 10 23 14.707 23 21.851Z"
      fill="#FFB02E"
    />
  </Svg>
)
const LearnBook = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={30} height={30} viewBox="0 0 30 30" fill="none" {...props}>
    <G clipPath="url(#a)">
      <Path
        d="M4.448 15.688H3.01a.517.517 0 0 0-.507.419L.238 27.735a1.035 1.035 0 0 0 1.019 1.23h11.157c0 .57 1.158 1.035 2.586 1.035s2.586-.465 2.586-1.034h11.157a1.035 1.035 0 0 0 1.02-1.232l-2.266-11.627a.518.518 0 0 0-.507-.419H4.448Z"
        fill="#E64C3C"
      />
      <Path
        d="M15 17.193v9.704a11.984 11.984 0 0 0-2.353-.745 17.695 17.695 0 0 0-9.254.47.52.52 0 0 1-.667-.579l1.722-10.355.145-.874a.522.522 0 0 1 .435-.43c.351-.051.713-.103 1.075-.144a3.69 3.69 0 0 0 4.557 1.774 2.72 2.72 0 0 0 2.576 1.836A2.673 2.673 0 0 0 15 17.193Z"
        fill="#F5EFCA"
      />
      <Path
        d="M26.607 26.622a17.696 17.696 0 0 0-9.254-.47c-.808.166-1.596.416-2.353.745v-9.704a2.34 2.34 0 0 0 .3-.295 4.39 4.39 0 0 0 1.624.31h.031c.027.37.168.723.404 1.01.502.496 1.13.846 1.815 1.013a2.83 2.83 0 0 1 1.283.848 1.096 1.096 0 0 0 1.267.326 1.08 1.08 0 0 0 .6-1.319 5.251 5.251 0 0 0-.176-.476c-.13-.32-.3-.622-.507-.9a3.866 3.866 0 0 0 1.96-2.69c.016-.02.037-.04.052-.061a2.76 2.76 0 0 0 .43-.693c.3.036.595.072.89.119a.522.522 0 0 1 .434.429l.145.874 1.722 10.355a.52.52 0 0 1-.667.58Z"
        fill="#F9EAB0"
      />
      <Path
        d="M17.586 28.966C17.586 29.535 16.428 30 15 30s-2.586-.465-2.586-1.034l.233-2.814c.807.166 1.596.416 2.353.745a11.972 11.972 0 0 1 2.354-.745l.232 2.814Z"
        fill="#C03A2B"
      />
      <Path
        d="M24.31 13.185c0 .372-.077.74-.227 1.08a2.727 2.727 0 0 1-.43.694c-.015.02-.036.041-.051.062a3.864 3.864 0 0 1-1.96 2.69c.206.277.377.579.506.9.068.155.125.315.176.475a1.08 1.08 0 0 1-.6 1.32 1.096 1.096 0 0 1-1.267-.327 2.83 2.83 0 0 0-1.283-.848 3.893 3.893 0 0 1-1.815-1.014 1.792 1.792 0 0 1-.404-1.008h-.03a4.382 4.382 0 0 1-1.625-.31 2.34 2.34 0 0 1-.3.294 2.673 2.673 0 0 1-1.764.657 2.72 2.72 0 0 1-2.576-1.836 3.696 3.696 0 0 1-4.236-5.68 1.603 1.603 0 0 1 1.19-2.105.018.018 0 0 1 .01-.005c-.034-.35.023-.703.166-1.024a2.084 2.084 0 0 1 2.819-1.05 3.054 3.054 0 0 1 2.627-1.495 3 3 0 0 1 2.007.76 1.603 1.603 0 0 1 2.845.233 3.858 3.858 0 0 1 4.283 3.512h.015a1.604 1.604 0 0 1 1.604 1.61 1.659 1.659 0 0 1-.207.796c.343.47.528 1.037.527 1.619Z"
        fill="#FB7B76"
      />
      <Path
        d="M15 1.552a.517.517 0 0 1-.517-.518V.517a.517.517 0 0 1 1.034 0v.517a.517.517 0 0 1-.517.518Zm8.336 3.56a.517.517 0 0 1-.365-.883l.517-.517a.517.517 0 1 1 .731.731l-.517.517a.517.517 0 0 1-.366.152Zm-16.672 0a.517.517 0 0 1-.366-.152l-.517-.517a.517.517 0 1 1 .731-.731l.517.517a.517.517 0 0 1-.365.883Zm3.981-2.177a.517.517 0 0 1-.478-.319l-.593-1.434a.517.517 0 1 1 .955-.396l.594 1.434a.519.519 0 0 1-.478.715Zm8.71 0a.518.518 0 0 1-.478-.715L19.47.786a.517.517 0 1 1 .955.396l-.593 1.434a.517.517 0 0 1-.478.32Zm6.158 6.16a.517.517 0 0 1-.198-.997l1.434-.593a.517.517 0 1 1 .395.956l-1.433.593a.517.517 0 0 1-.198.04Zm-21.026 0a.517.517 0 0 1-.198-.04L2.856 8.46a.517.517 0 1 1 .395-.956l1.434.593a.517.517 0 0 1-.198.996Z"
        fill="#F0C419"
      />
      <Path
        d="M23.654 14.958c-.016.021-.037.042-.052.063a3.794 3.794 0 0 1-.559 1.396c-.27.077-.551.115-.833.114a3.26 3.26 0 0 1-1.474-.357 3.384 3.384 0 0 1-.605-.414 1.793 1.793 0 0 1-2.26-.869.518.518 0 0 1 .926-.465.775.775 0 0 0 1.122.284.758.758 0 0 0 .331-.626.796.796 0 0 0-.078-.346.517.517 0 0 1 .921-.466c.126.253.192.53.192.812a1.788 1.788 0 0 1-.326 1.009c.082.057.165.114.248.16.31.16.654.243 1.003.243a2.172 2.172 0 0 0 1.444-.538Zm-6.326-2.03a3.088 3.088 0 0 0 1.282-1.969.517.517 0 1 0-1.016-.194 2.061 2.061 0 0 1-.857 1.313 2.111 2.111 0 0 1-2.722-.31.518.518 0 1 0-.766.697 3.119 3.119 0 0 0 1.658.956 1.54 1.54 0 0 1-1.259.648.517.517 0 1 0 0 1.034 2.565 2.565 0 0 0 2.41-1.659c.456-.075.89-.252 1.27-.516Zm4.82 5.682a4.03 4.03 0 0 1-1.21.393.517.517 0 1 1-.16-1.024c.3-.045.59-.136.863-.269.207.277.378.58.507.9ZM10.624 15a2.59 2.59 0 0 0-.041.44c-.001.193.025.387.077.574a3.87 3.87 0 0 1-1.008.217 3.19 3.19 0 0 1-.104-.776 1.798 1.798 0 0 1-1.603-1.784.524.524 0 0 1 .714-.49.516.516 0 0 1 .32.474v.016a.776.776 0 0 0 .74.76c.071-.233.17-.457.295-.667a.51.51 0 0 1 .708-.176c.244.15.322.467.176.714a2.163 2.163 0 0 0-.274.698Zm7.691 3.026a4.38 4.38 0 0 1-.956.191 1.792 1.792 0 0 1-.404-1.009 3.924 3.924 0 0 0 1.055-.17.518.518 0 1 1 .305.988Zm-4.453-9.233a.517.517 0 0 0-.517-.517 2.382 2.382 0 0 0-2.38 2.379.517.517 0 0 0 1.035 0 1.345 1.345 0 0 1 1.345-1.345.517.517 0 0 0 .517-.517ZM7.112 11.7a.512.512 0 0 1-.267-.074 2.128 2.128 0 0 1 1.09-3.95 2.1 2.1 0 0 1 1.701.857.518.518 0 0 1-.83.617 1.073 1.073 0 0 0-1.528-.213 1.093 1.093 0 0 0 .1 1.803.517.517 0 0 1-.267.96ZM18.21 6.78a.517.517 0 0 1-.517-.517 1.088 1.088 0 1 0-2.176 0 .517.517 0 0 1-1.034 0 2.122 2.122 0 1 1 4.245 0 .517.517 0 0 1-.518.517Zm4.852 5.964a.517.517 0 0 1-.22-.983c.206-.096.378-.255.49-.453a1.087 1.087 0 0 0-1.6-1.41.517.517 0 1 1-.62-.828 2.101 2.101 0 0 1 1.257-.426 2.127 2.127 0 0 1 .915 4.053.51.51 0 0 1-.222.047Z"
        fill="#FF5364"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h30v30H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)
const TaskFlag = ({ ...props }: Props) => (
  <Svg width={24} height={33} viewBox="0 0 24 33" fill="none" {...props}>
    <G filter="url(#filter0_i_1602_3998)">
      <Path
        d="M4.77 0C3.11814 0 2.29221 0 1.65906 0.316366C1.07792 0.606746 0.606746 1.07792 0.316366 1.65906C0 2.29221 0 3.11814 0 4.77V23.2213C0 24.2058 0 24.6981 0.140008 25.1401C0.269203 25.5481 0.48417 25.9236 0.770478 26.2416C1.08075 26.5863 1.50521 26.8356 2.35413 27.3342L9.58413 31.581C10.4542 32.092 10.8892 32.3475 11.3519 32.4499C11.7788 32.5444 12.2212 32.5444 12.6481 32.4499C13.1108 32.3475 13.5458 32.092 14.4159 31.581L21.6459 27.3342C22.4948 26.8356 22.9193 26.5863 23.2295 26.2416C23.5158 25.9236 23.7308 25.5481 23.86 25.1401C24 24.6981 24 24.2058 24 23.2213V4.77C24 3.11814 24 2.29221 23.6836 1.65906C23.3933 1.07792 22.9221 0.606746 22.3409 0.316366C21.7078 0 20.8819 0 19.23 0H4.77Z"
        fill="#FF7256"
      />
    </G>
    <Defs></Defs>
  </Svg>
)
const DictionaryColorized = ({ ...props }: Props) => (
  <Svg width={40} height={40} viewBox="0 0 40 40" fill="none" {...props}>
    <Path
      d="M33.125 3.75h-2.5v8.125h2.5A1.875 1.875 0 0 0 35 10V5.625a1.875 1.875 0 0 0-1.875-1.875Zm0 9.375h-2.5v8.125h2.5A1.875 1.875 0 0 0 35 19.375V15a1.875 1.875 0 0 0-1.875-1.875Zm0 9.375h-2.5v8.125h2.5A1.875 1.875 0 0 0 35 28.75v-4.375a1.875 1.875 0 0 0-1.875-1.875Z"
      fill="#FB8C00"
    />
    <Path
      d="M31.875 3.125V32.5H8.75a.631.631 0 0 1-.625-.625v-30a.627.627 0 0 1 .625-.625H30a1.88 1.88 0 0 1 1.875 1.875Z"
      fill="#FFB300"
    />
    <Path
      d="M8.75 1.25V32.5C8.675 32.481 5 35.344 5 35V4.456a1.867 1.867 0 0 1 .912-1.606L8.4 1.356l.031-.018a.61.61 0 0 1 .319-.088Z"
      fill="#FFA000"
    />
    <Path
      d="M31.866 31.25H8.746a3.75 3.75 0 1 0 .004 7.5h21.563a1.565 1.565 0 0 0 1.562-1.563c0-.86-.01-5.937-.01-5.937Z"
      fill="#FB8C00"
    />
    <Path
      d="M31.875 33.125H8.824a1.925 1.925 0 0 0-1.913 1.501 1.878 1.878 0 0 0 1.839 2.249h23.125v-3.75Zm-5-27.5h-13.75c-1.036 0-1.875.84-1.875 1.875v6.875c0 1.036.84 1.875 1.875 1.875h13.75c1.035 0 1.875-.84 1.875-1.875V7.5c0-1.036-.84-1.875-1.875-1.875Z"
      fill="#EEE"
    />
    <Path
      d="M15.074 13.701a1.013 1.013 0 0 1-.63-.236.296.296 0 0 1-.105-.326l1.395-4.575c.09-.294.478-.388.765-.39.294.003.674.094.765.39l1.403 4.575a.297.297 0 0 1-.105.326.992.992 0 0 1-.63.236c-.173-.003-.329-.042-.383-.217l-.255-.938h-1.582l-.255.938c-.044.177-.214.214-.383.217Zm.878-2.055h1.095l-.548-2.01-.547 2.01Zm3.345-.232c-.476-.003-.47-.941 0-.953h1.95c.472.032.48.93 0 .953h-1.95Zm2.828 2.265c-.427.012-.387-.443-.21-.72l2.115-3.743h-1.74c-.469-.018-.486-1.007 0-1.02h2.895a.294.294 0 0 1 .338.308.883.883 0 0 1-.128.412L23.28 12.66h2.04c.473.027.473.994 0 1.02h-3.195Z"
      fill="#E53935"
    />
    <Path
      d="M27.5 21.875h-15a.624.624 0 1 1 0-1.25h15a.624.624 0 1 1 0 1.25Zm0 2.5h-15a.624.624 0 1 1 0-1.25h15a.624.624 0 1 1 0 1.25Zm0 2.5h-15a.624.624 0 1 1 0-1.25h15a.624.624 0 1 1 0 1.25Z"
      fill="#EEE"
    />
  </Svg>
)
const Video = ({ ...props }: Props) => (
  <Svg width={40} height={40} viewBox="0 0 40 40" fill="none" {...props}>
    <G clipPath="url(#clip0_205_1742)">
      <Path
        d="M35.3672 3.625H4.63281C2.07031 3.625 0 5.70312 0 8.25781V27.3672C0 29.9219 2.07031 31.9922 4.63281 31.9922H14.625L18.2969 35.6641C19.2422 36.6094 20.7734 36.6094 21.7188 35.6641L25.3906 31.9922H35.375C37.9297 31.9922 40.0078 29.9219 40.0078 27.3672V8.25781C40 5.70312 37.9297 3.625 35.3672 3.625Z"
        fill="#FF2147"
      />
      <Path
        d="M20 8.83594C15.0391 8.83594 11.0156 12.8594 11.0156 17.8203C11.0156 22.7813 15.0391 26.8047 20 26.8047C24.9609 26.8047 28.9844 22.7813 28.9844 17.8203C28.9844 12.8594 24.9609 8.83594 20 8.83594ZM24.6562 19.0156C22.5781 20.3047 20.4922 21.5937 18.4141 22.8828C17.9453 23.1719 17.4687 23.2344 16.9844 22.9609C16.5 22.6875 16.3281 22.25 16.3281 21.7109C16.3359 20.4141 16.3281 19.1172 16.3281 17.8203C16.3281 16.5234 16.3359 15.2266 16.3281 13.9297C16.3281 13.3906 16.5 12.9531 16.9844 12.6797C17.4766 12.3984 17.9453 12.4844 18.4141 12.7734C20.4922 14.0703 22.5703 15.3594 24.6484 16.6562C25.6328 17.2812 25.6406 18.3984 24.6562 19.0156Z"
        fill="white"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_205_1742">
        <Rect width={40} height={40} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)
const Icons = {
  LeftArrow: {
    state: 'LeftArrow',
    icon: LeftArrow,
  },
  RightArrow: {
    state: 'RightArrow',
    icon: RightArrow,
  },
  Profile: {
    state: 'Profile',
    icon: Profile,
  },
  Microphone: {
    state: 'Microphone',
    icon: Microphone,
  },
  SendPaper: {
    state: 'SendPaper',
    icon: SendPaper,
  },
  Setting: {
    state: 'Setting',
    icon: Setting,
  },
  MenuHeading: {
    state: 'MenuHeading',
    icon: MenuHeading,
  },
  Comment: {
    state: 'Comment',
    icon: Comment,
  },
  MuteAudio: {
    state: 'MuteAudio',
    icon: MuteAudio,
  },
  WaveAudio: {
    state: 'WaveAudio',
    icon: WaveAudio,
  },
  Bookmark: {
    state: 'Bookmark',
    icon: Bookmark,
  },
  Player: {
    state: 'Player',
    icon: Player,
  },
  RePlay: {
    state: 'RePlay',
    icon: RePlay,
  },
  DisLike: {
    state: 'DisLike',
    icon: DisLike,
  },
  Like: {
    state: 'Like',
    icon: Like,
  },
  Cancel: {
    state: 'Cancel',
    icon: Cancel,
  },
  SendComment: {
    state: 'SendComment',
    icon: SendComment,
  },
  PenBrush: {
    state: 'PenBrush',
    icon: PenBrush,
  },
  Password: {
    state: 'Password',
    icon: Password,
  },
  Crown: {
    state: 'Crown',
    icon: Crown,
  },
  Notification: {
    state: 'Notification',
    icon: Notification,
  },
  Agree: {
    state: 'Agree',
    icon: Agree,
  },
  Lock: {
    state: 'Lock',
    icon: Lock,
  },
  StartFill: {
    state: 'StartFill',
    icon: StartFill,
  },
  StartOutLine: {
    state: 'StartOutLine',
    icon: StartOutLine,
  },
  Logout: {
    state: 'Logout',
    icon: Logout,
  },
  About: {
    state: 'About',
    icon: About,
  },
  History: {
    state: 'History',
    icon: History,
  },
  Dictionary: {
    state: 'Dictionary',
    icon: Dictionary,
  },
  ShowPassword: {
    state: 'ShowPassword',
    icon: ShowPassword,
  },
  HidePassword: {
    state: 'HidePassword',
    icon: HidePassword,
  },
  BackGame: {
    state: 'BackGame',
    icon: BackGame,
  },
  Back: {
    state: 'Back',
    icon: Back,
  },
  Home: {
    state: 'Home',
    icon: Home,
  },
  Dumbell: {
    state: 'Dumbell',
    icon: Dumbell,
  },
  GamePad: {
    state: 'GamePad',
    icon: GamePad,
  },
  User: {
    state: 'User',
    icon: User,
  },
  Tree: {
    state: 'Tree',
    icon: Tree,
  },
  Fire: {
    state: 'Fire',
    icon: Fire,
  },
  LearnBook: {
    state: 'LearnBook',
    icon: LearnBook,
  },
  TaskFlag: {
    state: 'TaskFlag',
    icon: TaskFlag,
  },
  DictionaryColorized: {
    state: 'DictionaryColorized',
    icon: DictionaryColorized,
  },
  Video: {
    state: 'Video',
    icon: Video,
  },
}
export type TIcon = keyof typeof Icons
interface PropsIcon extends Props {
  state: TIcon
}

export const Icon: React.FC<PropsIcon> = ({ state, ...props }) => {
  return Icons[state].icon(props)
}

export {
  LeftArrow,
  RightArrow,
  Profile,
  Microphone,
  SendPaper,
  Setting,
  MenuHeading,
  Comment,
  MuteAudio,
  WaveAudio,
  Bookmark,
  Player,
  RePlay,
  DisLike,
  Like,
  Cancel,
  SendComment,
  PenBrush,
  Password,
  Crown,
  Notification,
  Agree,
  Lock,
  StartFill,
  StartOutLine,
  Logout,
  About,
  History,
  Dictionary,
  ShowPassword,
  HidePassword,
  BackGame,
  Home,
  Dumbell,
  GamePad,
  User,
  Tree,
  Fire,
  LearnBook,
  TaskFlag,
  DictionaryColorized,
  Video,
}
