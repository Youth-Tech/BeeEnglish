import * as React from 'react'
import Svg, {
  SvgProps,
  Path,
  ClipPath,
  Defs,
  G,
  Rect,
  LinearGradient,
  Stop,
  Circle,
  Ellipse,
  Mask,
} from 'react-native-svg'
import { colors } from '@themes'

export interface Props extends SvgProps {
  fill?: string
  stroke?: string
  strokeWidth?: number
  size?: number
  width?: number
  height?: number
}

const myColors = colors.dark

const initialState: Props = {
  fill: myColors.black,
  stroke: myColors.black,
  size: 24,
}
const LeftArrow = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => {
  console.log(props)
  return (
    <Svg
      width={props.size || props.width || 24}
      height={props.size || props.height || 24}
      fill="none"
      {...props}
    >
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="m15 18-6-6 6-6"
      />
    </Svg>
  )
}

const RightArrow = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="m9 18 6-6-6-6"
    />
  </Svg>
)

const Profile = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2M16 7a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Microphone = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 20}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      d="M18.316 8.333V10c0 1.547-.71 3.03-1.976 4.124-1.266 1.094-2.982 1.709-4.772 1.709m0 0c-1.79 0-3.506-.615-4.771-1.709C5.53 13.03 4.82 11.547 4.82 10V8.333m6.748 7.5v3.333m-3.856 0h7.712M11.568.833c-.767 0-1.502.263-2.045.732-.542.47-.847 1.105-.847 1.768V10c0 .663.305 1.299.847 1.767.543.47 1.278.733 2.045.733.767 0 1.503-.264 2.045-.733.543-.468.847-1.104.847-1.767V3.333c0-.663-.305-1.299-.847-1.768-.542-.469-1.278-.732-2.045-.732Z"
    />
  </Svg>
)

const SendPaper = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 22}
    height={props.size || props.height || 22}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M20.167 1.833 10.084 11.916M20.167 1.833l-6.416 18.333-3.667-8.25M20.167 1.833 1.834 8.25l8.25 3.666"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h22v22H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Setting = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 22}
    height={props.size || props.height || 22}
    viewBox="0 0 22 22"
    fill="none"
    {...props}
  >
    <G clipPath="url(#clip0_1366_5411)">
      <Path
        d="M11.0001 13.7503C12.5189 13.7503 13.7501 12.5191 13.7501 11.0003C13.7501 9.48154 12.5189 8.25033 11.0001 8.25033C9.4813 8.25033 8.25008 9.48154 8.25008 11.0003C8.25008 12.5191 9.4813 13.7503 11.0001 13.7503Z"
        stroke={stroke}
        strokeWidth={2}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <Path
        d="M17.7834 13.7503C17.6614 14.0268 17.625 14.3335 17.6789 14.6309C17.7328 14.9282 17.8746 15.2026 18.0859 15.4187L18.1409 15.4737C18.3114 15.6439 18.4466 15.8461 18.5389 16.0687C18.6311 16.2912 18.6786 16.5298 18.6786 16.7707C18.6786 17.0117 18.6311 17.2502 18.5389 17.4728C18.4466 17.6954 18.3114 17.8976 18.1409 18.0678C17.9706 18.2383 17.7685 18.3735 17.5459 18.4658C17.3233 18.558 17.0848 18.6055 16.8438 18.6055C16.6029 18.6055 16.3643 18.558 16.1418 18.4658C15.9192 18.3735 15.717 18.2383 15.5467 18.0678L15.4917 18.0128C15.2757 17.8015 15.0013 17.6597 14.704 17.6058C14.4066 17.5519 14.0999 17.5883 13.8234 17.7103C13.5523 17.8265 13.3211 18.0195 13.1582 18.2654C12.9953 18.5113 12.9079 18.7995 12.9067 19.0945V19.2503C12.9067 19.7366 12.7136 20.2029 12.3698 20.5467C12.026 20.8905 11.5596 21.0837 11.0734 21.0837C10.5872 21.0837 10.1209 20.8905 9.77705 20.5467C9.43324 20.2029 9.24008 19.7366 9.24008 19.2503V19.1678C9.23298 18.8644 9.13477 18.5702 8.95822 18.3233C8.78166 18.0764 8.53492 17.8884 8.25008 17.7837C7.9736 17.6616 7.6669 17.6252 7.36954 17.6792C7.07218 17.7331 6.79779 17.8748 6.58175 18.0862L6.52675 18.1412C6.35648 18.3116 6.15429 18.4468 5.93172 18.5391C5.70916 18.6314 5.47059 18.6789 5.22967 18.6789C4.98874 18.6789 4.75017 18.6314 4.52761 18.5391C4.30504 18.4468 4.10285 18.3116 3.93258 18.1412C3.76212 17.9709 3.6269 17.7687 3.53464 17.5461C3.44238 17.3236 3.39489 17.085 3.39489 16.8441C3.39489 16.6031 3.44238 16.3646 3.53464 16.142C3.6269 15.9195 3.76212 15.7173 3.93258 15.547L3.98758 15.492C4.19891 15.276 4.34067 15.0016 4.39459 14.7042C4.4485 14.4068 4.4121 14.1001 4.29008 13.8237C4.17388 13.5525 3.98094 13.3213 3.73501 13.1584C3.48908 12.9956 3.20089 12.9082 2.90591 12.907H2.75008C2.26385 12.907 1.79754 12.7138 1.45372 12.37C1.1099 12.0262 0.916748 11.5599 0.916748 11.0737C0.916748 10.5874 1.1099 10.1211 1.45372 9.7773C1.79754 9.43348 2.26385 9.24033 2.75008 9.24033H2.83258C3.13599 9.23323 3.43025 9.13502 3.67711 8.95846C3.92396 8.7819 4.11199 8.53517 4.21675 8.25033C4.33877 7.97384 4.37517 7.66715 4.32125 7.36979C4.26734 7.07242 4.12557 6.79803 3.91425 6.58199L3.85925 6.52699C3.68879 6.35673 3.55357 6.15453 3.46131 5.93197C3.36904 5.7094 3.32156 5.47084 3.32156 5.22991C3.32156 4.98898 3.36904 4.75042 3.46131 4.52785C3.55357 4.30529 3.68879 4.10309 3.85925 3.93283C4.02952 3.76237 4.23171 3.62714 4.45427 3.53488C4.67684 3.44262 4.9154 3.39513 5.15633 3.39513C5.39726 3.39513 5.63583 3.44262 5.85839 3.53488C6.08095 3.62714 6.28315 3.76237 6.45342 3.93283L6.50842 3.98783C6.72445 4.19915 6.99885 4.34091 7.29621 4.39483C7.59357 4.44875 7.90027 4.41235 8.17675 4.29033H8.25008C8.5212 4.17413 8.75243 3.98118 8.9153 3.73525C9.07817 3.48932 9.16557 3.20113 9.16675 2.90616V2.75033C9.16675 2.2641 9.3599 1.79778 9.70372 1.45396C10.0475 1.11015 10.5139 0.916992 11.0001 0.916992C11.4863 0.916992 11.9526 1.11015 12.2964 1.45396C12.6403 1.79778 12.8334 2.2641 12.8334 2.75033V2.83283C12.8346 3.1278 12.922 3.41599 13.0849 3.66192C13.2477 3.90785 13.479 4.10079 13.7501 4.21699C14.0266 4.33901 14.3333 4.37541 14.6306 4.3215C14.928 4.26758 15.2024 4.12582 15.4184 3.91449L15.4734 3.85949C15.6437 3.68904 15.8459 3.55381 16.0684 3.46155C16.291 3.36929 16.5296 3.3218 16.7705 3.3218C17.0114 3.3218 17.25 3.36929 17.4726 3.46155C17.6951 3.55381 17.8973 3.68904 18.0676 3.85949C18.238 4.02976 18.3733 4.23196 18.4655 4.45452C18.5578 4.67708 18.6053 4.91565 18.6053 5.15658C18.6053 5.3975 18.5578 5.63607 18.4655 5.85863C18.3733 6.0812 18.238 6.28339 18.0676 6.45366L18.0126 6.50866C17.8013 6.7247 17.6595 6.99909 17.6056 7.29645C17.5517 7.59382 17.5881 7.90051 17.7101 8.17699V8.25033C17.8263 8.52145 18.0192 8.75268 18.2652 8.91554C18.5111 9.07841 18.7993 9.16582 19.0942 9.16699H19.2501C19.7363 9.16699 20.2026 9.36015 20.5464 9.70396C20.8903 10.0478 21.0834 10.5141 21.0834 11.0003C21.0834 11.4866 20.8903 11.9529 20.5464 12.2967C20.2026 12.6405 19.7363 12.8337 19.2501 12.8337H19.1676C18.8726 12.8348 18.5844 12.9222 18.3385 13.0851C18.0926 13.248 17.8996 13.4792 17.7834 13.7503Z"
        stroke={stroke}
        strokeWidth={2}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_1366_5411">
        <Rect width={22} height={22} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)

const MenuHeading = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M3 12h14M3 6h18M3 18h18"
    />
  </Svg>
)

const Comment = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M9.907 16.875c4.104 0 7.43-3.078 7.43-6.875s-3.326-6.875-7.43-6.875c-4.104 0-7.43 3.078-7.43 6.875 0 1.697.664 3.25 1.765 4.449.418.455.73 1.046.553 1.638-.149.496-.396.949-.72 1.335a4.855 4.855 0 0 0 .878.078 4.9 4.9 0 0 0 2.845-.906c.668.183 1.376.281 2.109.281Z"
    />
  </Svg>
)

const MuteAudio = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.width || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.905A9.76 9.76 0 0 0 1.5 12c0 .898.121 1.768.35 2.595.341 1.24 1.518 1.905 2.659 1.905h1.93l4.5 4.5c.945.945 2.561.276 2.561-1.06V4.06ZM17.78 9.22a.75.75 0 1 0-1.06 1.06L18.44 12l-1.72 1.72a.75.75 0 0 0 1.06 1.06l1.72-1.72 1.72 1.72a.75.75 0 1 0 1.06-1.06L20.56 12l1.72-1.72a.75.75 0 0 0-1.06-1.06l-1.72 1.72-1.72-1.72Z"
    />
  </Svg>
)

const WaveAudio = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.905A9.76 9.76 0 0 0 1.5 12c0 .898.121 1.768.35 2.595.341 1.24 1.518 1.905 2.659 1.905h1.93l4.5 4.5c.945.945 2.561.276 2.561-1.06V4.06ZM18.584 5.106a.75.75 0 0 1 1.06 0c3.808 3.807 3.808 9.98 0 13.788a.75.75 0 1 1-1.06-1.06 8.25 8.25 0 0 0 0-11.668.75.75 0 0 1 0-1.06Z"
    />
    <Path
      fill={fill}
      d="M15.932 7.757a.75.75 0 0 1 1.061 0 6 6 0 0 1 0 8.486.75.75 0 0 1-1.06-1.061 4.5 4.5 0 0 0 0-6.364.75.75 0 0 1 0-1.06Z"
    />
  </Svg>
)

const Bookmark = ({
  fill = 'transparent',
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 10}
    height={props.size || props.height || 10}
    viewBox="0 0 10 10"
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      stroke={stroke}
      strokeWidth={props.strokeWidth || 1.5}
      strokeLinecap="round"
      strokeLinejoin="round"
      d="M7.33055 1.38434C7.78913 1.43756 8.125 1.83292 8.125 2.29458V8.75L5 7.1875L1.875 8.75V2.29458C1.875 1.83292 2.21087 1.43756 2.66945 1.38434C3.43398 1.29561 4.21167 1.25 5 1.25C5.78833 1.25 6.56602 1.29561 7.33055 1.38434Z"
    />
  </Svg>
)

const Player = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill="#1D1B3E"
      d="M0 1.944v20.112c0 1.534 1.689 2.465 2.99 1.63l15.802-10.055c1.203-.757 1.203-2.505 0-3.281L2.99.313C1.689-.52 0 .41 0 1.944Z"
    />
  </Svg>
)

const RePlay = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill={fill}
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        fill="#1D1B3E"
        d="M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const DisLike = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    viewBox="0 0 24 24"
    fill="none"
    {...props}
  >
    <G id="style=stroke">
      <G id="like">
        <Path
          id="vector (Stroke)"
          fillRule="evenodd"
          clipRule="evenodd"
          d="M14.2102 2.59462C15.433 3.00969 16.2694 4.34931 15.9976 5.63891L15.5019 8.81168C15.483 8.95057 15.5238 9.02715 15.5598 9.06803C15.6017 9.11544 15.6701 9.15175 15.76 9.15175H19.76C20.7004 9.15175 21.5475 9.5166 22.0669 10.2072C22.5933 10.9072 22.6979 11.8292 22.3659 12.7549C22.2456 13.0904 22.126 13.5007 21.9862 13.9881C21.9758 14.0245 21.9653 14.0613 21.9546 14.0984C21.8252 14.5503 21.6807 15.0546 21.5115 15.5812C21.1452 16.7211 20.6523 18.0009 19.8942 19.202C19.2027 20.2977 18.2938 21.3018 16.68 21.3018H6.66058L6.66003 19.8018H16.68C17.5011 19.8018 18.0176 19.365 18.6257 18.4015C19.2877 17.3526 19.7347 16.2074 20.0834 15.1223C20.245 14.6195 20.3832 14.1371 20.5135 13.6822C20.5238 13.6462 20.5341 13.6104 20.5443 13.5747C20.6814 13.0965 20.8143 12.6381 20.954 12.2486C21.142 11.7243 21.0467 11.3463 20.868 11.1088C20.6824 10.8619 20.3195 10.6518 19.76 10.6518H15.76C14.7166 10.6518 13.8511 9.76035 14.0175 8.59568L14.0189 8.58596L14.5226 5.36237L14.5278 5.33905C14.6385 4.84103 14.2848 4.20061 13.7228 4.01326L13.7096 4.00887L13.6966 4.004C13.4936 3.92788 13.2269 3.92963 12.9538 4.02352C12.6756 4.11914 12.4749 4.28145 12.384 4.41778L12.3824 4.42013L8.28243 10.5201L7.0375 9.68337L11.1359 3.58573C11.1362 3.5853 11.1365 3.58488 11.1368 3.58446C11.446 3.12144 11.9448 2.7842 12.4662 2.60499C12.9892 2.4252 13.617 2.37633 14.2102 2.59462Z"
          fill={fill}
        />
        <Path
          id="rec (Stroke)"
          fillRule="evenodd"
          clipRule="evenodd"
          d="M1.43005 10.5518C1.43005 9.58526 2.21356 8.80176 3.18005 8.80176H6.68005C7.64655 8.80176 8.43005 9.58526 8.43005 10.5518V21.3018H3.18005C2.21356 21.3018 1.43005 20.5183 1.43005 19.5518V10.5518ZM3.18005 10.3018C3.04198 10.3018 2.93005 10.4137 2.93005 10.5518V19.5518C2.93005 19.6898 3.04198 19.8018 3.18005 19.8018H6.93005V10.5518C6.93005 10.4137 6.81812 10.3018 6.68005 10.3018H3.18005Z"
          fill={fill}
        />
      </G>
    </G>
  </Svg>
)
const Like = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    viewBox="0 0 24 24"
    fill="none"
    {...props}
  >
    <G id="style=fill">
      <G id="like">
        <Path
          id="Subtract"
          fillRule="evenodd"
          clipRule="evenodd"
          d="M15.9977 5.63891C16.2695 4.34931 15.433 3.00969 14.2102 2.59462C13.6171 2.37633 12.9892 2.4252 12.4662 2.60499C11.9449 2.78419 11.4461 3.12142 11.1369 3.58441L11.136 3.58573L7.49506 9.00272C8.05104 9.29585 8.43005 9.87954 8.43005 10.5518V21.3018H6.91003V21.3018H16.6801C18.2938 21.3018 19.2028 20.2977 19.8943 19.202C20.6524 18.0009 21.1453 16.7211 21.5116 15.5812C21.6808 15.0546 21.8252 14.5503 21.9547 14.0984L21.9863 13.9881C22.126 13.5007 22.2457 13.0904 22.366 12.7549C22.698 11.8292 22.5933 10.9072 22.067 10.2072C21.5476 9.5166 20.7005 9.15175 19.76 9.15175H15.76C15.6702 9.15175 15.6017 9.11544 15.5599 9.06803C15.5238 9.02716 15.4831 8.95058 15.502 8.81171L15.9977 5.63891Z"
          fill={fill}
        />
        <Path
          id="rec"
          d="M2.18005 10.6199C2.18005 10.03 2.62777 9.55176 3.18005 9.55176H6.68005C7.23234 9.55176 7.68005 10.03 7.68005 10.6199V21.3018H3.18005C2.62777 21.3018 2.18005 20.8235 2.18005 20.2336V10.6199Z"
          fill={fill}
        />
      </G>
    </G>
  </Svg>
)

const Cancel = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 23}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      strokeWidth={props.size || props.width || 23}
      d="M5.24 5.47a.697.697 0 0 1 1.016 0l5.24 5.47 5.24-5.47a.697.697 0 0 1 1.017 0c.28.293.28.767 0 1.06L12.513 12l5.24 5.47c.28.293.28.767 0 1.06a.697.697 0 0 1-1.016 0l-5.24-5.47-5.241 5.47a.697.697 0 0 1-1.016 0 .773.773 0 0 1 0-1.06L10.48 12 5.24 6.53a.773.773 0 0 1 0-1.06Z"
      clipRule="evenodd"
    />
  </Svg>
)

const SendComment = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 25}
    height={props.size || props.height || 25}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M11.979 12.5H5.644h6.335Zm-6.515.83-1.047 3.127c-.573 1.712-.86 2.569-.654 3.096.179.458.562.805 1.036.937.545.152 1.368-.218 3.015-.96l10.557-4.75c1.607-.723 2.41-1.085 2.659-1.587a1.563 1.563 0 0 0 0-1.385c-.248-.502-1.052-.864-2.66-1.588L7.797 5.462c-1.642-.739-2.463-1.108-3.007-.957a1.562 1.562 0 0 0-1.036.935c-.207.526.077 1.38.644 3.09l1.069 3.22c.097.293.146.44.165.59.017.133.017.268 0 .401-.02.15-.069.296-.167.59Z"
    />
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={0.5}
      d="M11.979 12.5H5.644m-.18.83-1.047 3.127c-.573 1.712-.86 2.569-.654 3.096.179.458.562.805 1.036.937.545.152 1.368-.218 3.015-.96l10.557-4.75c1.607-.723 2.41-1.085 2.659-1.587a1.563 1.563 0 0 0 0-1.385c-.248-.502-1.052-.864-2.66-1.588L7.797 5.462c-1.642-.739-2.463-1.108-3.007-.957a1.562 1.562 0 0 0-1.036.935c-.207.526.077 1.38.644 3.09l1.069 3.22c.097.293.146.44.165.59.017.133.017.268 0 .401-.02.15-.069.296-.167.59Z"
    />
  </Svg>
)

const PenBrush = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M20.6 1.5c-.376 0-.743.111-1.056.32l-5.079 3.385a18.747 18.747 0 0 0-3.472 2.987 10.04 10.04 0 0 1 4.815 4.815 18.752 18.752 0 0 0 2.987-3.472l3.386-5.079A1.902 1.902 0 0 0 20.6 1.5Zm-8.3 14.025c.657-.365 1.29-.769 1.896-1.207a8.026 8.026 0 0 0-4.513-4.513A18.75 18.75 0 0 0 8.476 11.7l-.279.5a5.26 5.26 0 0 1 3.602 3.602l.501-.278ZM6.75 13.5A3.75 3.75 0 0 0 3 17.25a1.5 1.5 0 0 1-1.6 1.497.75.75 0 0 0-.7 1.123 5.25 5.25 0 0 0 9.8-2.62 3.75 3.75 0 0 0-3.75-3.75Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Password = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M7 11V7a5 5 0 1 1 10 0v4M5 11h14a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Crown = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 21}
    height={props.size || props.height || 14}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M19.605 4.231a.55.55 0 0 1-.015.167l-1.259 4.934a.57.57 0 0 1-.552.425l-7.553.037H2.67a.57.57 0 0 1-.555-.425L.856 4.416a.549.549 0 0 1-.015-.171A1.182 1.182 0 0 1 0 3.122c0-.65.539-1.178 1.202-1.178.662 0 1.201.528 1.201 1.178 0 .365-.17.692-.438.909L3.54 5.587a2.164 2.164 0 0 0 3.224-.214l2.59-3.363a1.162 1.162 0 0 1-.353-.832c0-.65.54-1.178 1.202-1.178.663 0 1.202.528 1.202 1.178 0 .314-.128.6-.334.812l.002.002 2.572 3.373c.4.526 1.04.84 1.711.84.57 0 1.107-.217 1.51-.613l1.587-1.554a1.167 1.167 0 0 1-.449-.917c0-.649.539-1.177 1.202-1.177.662 0 1.201.528 1.201 1.178 0 .512-.336.947-.803 1.109Zm-1.397 7.32c0-.31-.256-.56-.572-.56h-14.8a.567.567 0 0 0-.573.56v1.346c0 .31.257.56.573.56h14.8a.567.567 0 0 0 .572-.56v-1.346Z"
    />
  </Svg>
)

const Notification = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M13.73 21a2 2 0 0 1-3.46 0M18 8A6 6 0 1 0 6 8c0 7-3 9-3 9h18s-3-2-3-9Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Agree = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 18}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M23.417.527c.755.725.78 1.924.056 2.68L10.146 17.1a1.895 1.895 0 0 1-2.77-.038L.492 9.484a1.895 1.895 0 0 1 2.805-2.547l5.52 6.076L20.736.583a1.895 1.895 0 0 1 2.68-.056Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Lock = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 30}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M12 0C7.03 0 3 4.335 3 9.682V12h-.457c-1.326 0-2.47 1.07-2.519 2.394C-.158 19.455.401 30 12 30c11.576 0 12.156-10.556 11.977-15.605C23.93 13.07 22.787 12 21.46 12H21V9.682C21 4.335 16.97 0 12 0Zm6.428 12V9.682c0-3.82-2.878-6.916-6.428-6.916S5.571 5.862 5.571 9.682V12h12.857Zm-5.786 8.89a1.927 1.927 0 0 0 1.26-1.819c0-1.065-.847-1.928-1.894-1.928-1.046 0-1.895.863-1.895 1.928 0 .841.529 1.556 1.266 1.82v2.049a.631.631 0 1 0 1.263 0v-2.05Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Logout = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4m7 14 5-5m0 0-5-5m5 5H9"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)
const StartOutLine = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="m12 2 3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2Z"
    />
  </Svg>
)

const StartFill = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 21}
    height={props.size || props.height || 19}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        fill={fill}
        d="m11.17.96 2.299 4.232c.16.295.469.499.826.546l5.139.679c.9.119 1.259 1.124.608 1.7l-3.718 3.295a.943.943 0 0 0-.316.882l.878 4.652c.154.815-.787 1.436-1.592 1.051l-4.596-2.196a1.197 1.197 0 0 0-1.021 0L5.08 17.997c-.805.385-1.746-.236-1.592-1.051l.877-4.652a.942.942 0 0 0-.315-.882L.333 8.117C-.32 7.54.04 6.535.94 6.417l5.138-.68c.358-.046.667-.25.827-.545L9.204.96C9.606.22 10.768.22 11.17.96Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h20.375v18.518H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const About = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        stroke={stroke}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3m.08 4h.01M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const History = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <G clipPath="url(#a)">
      <Path
        fill={fill}
        d="M13 3a9 9 0 0 0-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0 0 13 21a9 9 0 0 0 0-18Zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const Dictionary = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20M4 19.5A2.5 2.5 0 0 0 6.5 22H20V2H6.5A2.5 2.5 0 0 0 4 4.5v15Z"
    />
  </Svg>
)

const ShowPassword = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 17}
    height={props.size || props.height || 12}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M11.146 5.932c0 .715-.28 1.4-.778 1.906a2.633 2.633 0 0 1-1.876.79 2.633 2.633 0 0 1-1.877-.79 2.718 2.718 0 0 1-.777-1.906c0-.715.28-1.401.777-1.907a2.633 2.633 0 0 1 1.877-.79c.704 0 1.379.284 1.876.79.498.506.778 1.192.778 1.907Z"
    />
    <Path
      fill={fill}
      fillRule="evenodd"
      d="M0 5.932S3.184 0 8.492 0c5.307 0 8.491 5.932 8.491 5.932s-3.184 5.932-8.491 5.932C3.184 11.864 0 5.932 0 5.932Zm8.492 3.775c.985 0 1.93-.398 2.626-1.106a3.806 3.806 0 0 0 1.089-2.669 3.806 3.806 0 0 0-1.089-2.67 3.685 3.685 0 0 0-2.626-1.105c-.986 0-1.93.398-2.627 1.106a3.806 3.806 0 0 0-1.088 2.67c0 1 .39 1.96 1.088 2.668a3.685 3.685 0 0 0 2.627 1.106Z"
      clipRule="evenodd"
    />
  </Svg>
)

const HidePassword = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 17}
    height={props.size || props.height || 17}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="m8.38 6.375 2.246 2.238V8.5A2.125 2.125 0 0 0 8.5 6.375h-.12Zm-3.046.567L6.432 8.04a1.951 1.951 0 0 0-.056.46A2.125 2.125 0 0 0 8.5 10.625c.155 0 .311-.021.46-.057l1.098 1.098a3.51 3.51 0 0 1-1.558.376A3.542 3.542 0 0 1 4.959 8.5c0-.56.142-1.084.375-1.558ZM1.417 3.025 3.032 4.64l.32.318A8.382 8.382 0 0 0 .708 8.5c1.225 3.11 4.25 5.313 7.792 5.313a8.342 8.342 0 0 0 3.102-.596l.305.298 2.068 2.068.9-.9L2.316 2.126m6.185 2.833A3.542 3.542 0 0 1 12.042 8.5c0 .453-.092.893-.255 1.29l2.076 2.075a8.39 8.39 0 0 0 2.43-3.365c-1.226-3.11-4.25-5.313-7.792-5.313-.992 0-1.941.178-2.834.496l1.537 1.523a3.576 3.576 0 0 1 1.297-.248Z"
    />
  </Svg>
)

const BackGame = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      fill={fill}
      d="M14.56 15c-.213 0-.397-.176-.433-.42-.317-2.117-2.11-5.813-6.658-6.029v2.717a.558.558 0 0 1-.065.262.469.469 0 0 1-.174.185.393.393 0 0 1-.456-.038L.184 6.294a.49.49 0 0 1-.135-.179.562.562 0 0 1 0-.46.49.49 0 0 1 .135-.179L6.774.094A.393.393 0 0 1 7.23.056a.47.47 0 0 1 .173.185c.042.079.065.17.065.262V3.26C10.28 3.58 15 5.902 15 14.497c0 .262-.175.48-.403.501a.41.41 0 0 1-.037.002Z"
    />
  </Svg>
)

const Back = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.size || props.width || 24}
    height={props.size || props.height || 24}
    fill="none"
    {...props}
  >
    <Path
      stroke={stroke}
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M19.5 12h-15m0 0 6.75 6.75M4.5 12l6.75-6.75"
    />
  </Svg>
)
const Home = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <Path
      d="M16.3474 6.3301C16.2544 6.24109 16.1305 6.19141 16.0018 6.19141C15.873 6.19141 15.7492 6.24109 15.6562 6.3301L4.1499 17.322C4.10104 17.3687 4.06216 17.4249 4.03563 17.4871C4.00909 17.5493 3.99545 17.6162 3.99553 17.6838L3.99365 28.0001C3.99365 28.5305 4.20437 29.0392 4.57944 29.4143C4.95451 29.7894 5.46322 30.0001 5.99365 30.0001H11.9999C12.2651 30.0001 12.5195 29.8947 12.707 29.7072C12.8945 29.5197 12.9999 29.2653 12.9999 29.0001V20.5001C12.9999 20.3675 13.0526 20.2403 13.1463 20.1465C13.2401 20.0528 13.3673 20.0001 13.4999 20.0001H18.4999C18.6325 20.0001 18.7597 20.0528 18.8535 20.1465C18.9472 20.2403 18.9999 20.3675 18.9999 20.5001V29.0001C18.9999 29.2653 19.1053 29.5197 19.2928 29.7072C19.4803 29.8947 19.7347 30.0001 19.9999 30.0001H26.0037C26.5341 30.0001 27.0428 29.7894 27.4179 29.4143C27.7929 29.0392 28.0037 28.5305 28.0037 28.0001V17.6838C28.0037 17.6162 27.9901 17.5493 27.9636 17.4871C27.937 17.4249 27.8981 17.3687 27.8493 17.322L16.3474 6.3301Z"
      fill={fill}
    />
    <Path
      d="M30.6819 15.2594L26.0069 10.7869V4C26.0069 3.73478 25.9015 3.48043 25.714 3.29289C25.5265 3.10536 25.2721 3 25.0069 3H22.0069C21.7417 3 21.4873 3.10536 21.2998 3.29289C21.1123 3.48043 21.0069 3.73478 21.0069 4V6L17.3869 2.53875C17.0481 2.19625 16.5444 2 16 2C15.4575 2 14.955 2.19625 14.6163 2.53938L1.32252 15.2581C0.933774 15.6331 0.885024 16.25 1.23877 16.6562C1.32761 16.7588 1.43637 16.8422 1.55846 16.9014C1.68055 16.9605 1.8134 16.9942 1.94892 17.0004C2.08445 17.0066 2.21982 16.9852 2.3468 16.9374C2.47378 16.8896 2.5897 16.8165 2.68752 16.7225L15.6563 4.33C15.7493 4.24099 15.8731 4.19131 16.0019 4.19131C16.1307 4.19131 16.2545 4.24099 16.3475 4.33L29.3175 16.7225C29.5086 16.9057 29.7645 17.0057 30.0291 17.0006C30.2938 16.9954 30.5456 16.8855 30.7294 16.695C31.1131 16.2975 31.0813 15.6412 30.6819 15.2594Z"
      fill={fill}
    />
  </Svg>
)
const Dumbell = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <Path
      d="M11.1735 27.4246L4.57753 20.8273C3.37086 19.6219 2.76819 19.0193 2.68286 18.2833C2.66366 18.1189 2.66366 17.9529 2.68286 17.7886C2.76819 17.0526 3.37086 16.4486 4.57619 15.2433C5.78286 14.0379 6.38553 13.4353 7.12153 13.3499C7.28553 13.3299 7.45219 13.3299 7.61486 13.3499C8.35219 13.4353 8.95486 14.0379 10.1615 15.2433L11.1389 16.2219L16.2215 11.1379L15.2442 10.1606C14.0375 8.95525 13.4349 8.35259 13.3495 7.61659C13.3303 7.45226 13.3303 7.28625 13.3495 7.12192C13.4349 6.38592 14.0375 5.78325 15.2429 4.57659C16.4495 3.37125 17.0522 2.76859 17.7882 2.68325C17.9521 2.66418 18.1176 2.66418 18.2815 2.68325C19.0189 2.76859 19.6215 3.37125 20.8282 4.57659L27.4255 11.1766C28.6322 12.3819 29.2349 12.9846 29.3202 13.7206C29.3402 13.8846 29.3402 14.0513 29.3202 14.2139C29.2349 14.9513 28.6322 15.5539 27.4269 16.7606C26.2202 17.9646 25.6175 18.5673 24.8815 18.6539C24.7176 18.673 24.5521 18.673 24.3882 18.6539C23.6509 18.5673 23.0482 17.9646 21.8415 16.7606L20.3602 15.2766L15.2762 20.3606L16.7589 21.8433C17.9655 23.0486 18.5682 23.6513 18.6535 24.3873C18.6735 24.5513 18.6735 24.7179 18.6535 24.8806C18.5682 25.6179 17.9655 26.2206 16.7602 27.4273C15.5535 28.6313 14.9509 29.2339 14.2149 29.3206C14.051 29.3397 13.8854 29.3397 13.7215 29.3206C12.9842 29.2339 12.3815 28.6313 11.1749 27.4273L11.1735 27.4246Z"
      fill={fill}
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M23.3174 2.62417C23.4103 2.53125 23.5206 2.45753 23.6419 2.40724C23.7633 2.35694 23.8934 2.33105 24.0248 2.33105C24.1562 2.33105 24.2862 2.35694 24.4076 2.40724C24.529 2.45753 24.6392 2.53125 24.7321 2.62417L28.8708 6.76284C29.0474 6.95241 29.1436 7.20314 29.139 7.4622C29.1344 7.72127 29.0295 7.96845 28.8463 8.15167C28.6631 8.33489 28.4159 8.43984 28.1568 8.44441C27.8977 8.44898 27.647 8.35281 27.4574 8.17617L23.3174 4.03751C23.1302 3.85001 23.025 3.59584 23.025 3.33084C23.025 3.06584 23.1302 2.81168 23.3174 2.62417ZM2.62411 23.3175C2.81161 23.1302 3.06577 23.0251 3.33078 23.0251C3.59578 23.0251 3.84994 23.1302 4.03744 23.3175L8.17611 27.4562C8.35275 27.6457 8.44891 27.8965 8.44434 28.1555C8.43977 28.4146 8.33482 28.6618 8.15161 28.845C7.96839 29.0282 7.72121 29.1332 7.46214 29.1377C7.20307 29.1423 6.95234 29.0462 6.76278 28.8695L2.62278 24.7308C2.43551 24.5433 2.33032 24.2892 2.33032 24.0242C2.33032 23.7592 2.43551 23.505 2.62278 23.3175H2.62411Z"
      fill={fill}
    />
  </Svg>
)
const GamePad = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <Path
      d="M30.1957 15.3363C28.87 9.3432 26.875 6.14445 23.9157 5.2707C23.2936 5.08823 22.6483 4.99707 22 5.00007C21.1432 5.00007 20.3969 5.20882 19.6075 5.43007C18.6563 5.69695 17.5757 6.00007 16 6.00007C14.4244 6.00007 13.3432 5.69757 12.39 5.4307C11.6 5.20882 10.8544 5.00007 10 5.00007C9.32969 4.99775 8.66226 5.08862 8.01692 5.27007C5.07317 6.14007 3.07942 9.33757 1.73442 15.3326C0.288172 21.7838 1.00005 25.8569 3.73067 26.8019C4.10497 26.9339 4.4988 27.0019 4.89567 27.0032C6.7663 27.0032 8.2663 25.4451 9.2913 24.1694C10.4494 22.7257 11.805 21.9932 16 21.9932C19.7469 21.9932 21.2975 22.5013 22.6369 24.1694C23.4788 25.2182 24.2744 25.9519 25.0682 26.4138C26.1238 27.0276 27.1788 27.1638 28.2032 26.8119C29.8169 26.2613 30.7419 24.8057 30.9532 22.4844C31.1138 20.7044 30.8663 18.3663 30.1957 15.3363ZM13 15.0001H11V17.0001C11 17.2653 10.8947 17.5196 10.7072 17.7072C10.5196 17.8947 10.2653 18.0001 10 18.0001C9.73483 18.0001 9.48048 17.8947 9.29294 17.7072C9.1054 17.5196 9.00005 17.2653 9.00005 17.0001V15.0001H7.00005C6.73483 15.0001 6.48048 14.8947 6.29294 14.7072C6.1054 14.5196 6.00005 14.2653 6.00005 14.0001C6.00005 13.7349 6.1054 13.4805 6.29294 13.293C6.48048 13.1054 6.73483 13.0001 7.00005 13.0001H9.00005V11.0001C9.00005 10.7349 9.1054 10.4805 9.29294 10.293C9.48048 10.1054 9.73483 10.0001 10 10.0001C10.2653 10.0001 10.5196 10.1054 10.7072 10.293C10.8947 10.4805 11 10.7349 11 11.0001V13.0001H13C13.2653 13.0001 13.5196 13.1054 13.7072 13.293C13.8947 13.4805 14 13.7349 14 14.0001C14 14.2653 13.8947 14.5196 13.7072 14.7072C13.5196 14.8947 13.2653 15.0001 13 15.0001ZM18.25 15.2501C18.0028 15.2501 17.7611 15.1768 17.5556 15.0394C17.35 14.9021 17.1898 14.7068 17.0952 14.4784C17.0006 14.25 16.9758 13.9987 17.0241 13.7562C17.0723 13.5137 17.1913 13.291 17.3662 13.1162C17.541 12.9414 17.7637 12.8223 18.0062 12.7741C18.2487 12.7259 18.5 12.7506 18.7284 12.8452C18.9568 12.9398 19.152 13.1 19.2894 13.3056C19.4267 13.5112 19.5 13.7528 19.5 14.0001C19.5 14.3316 19.3684 14.6495 19.1339 14.884C18.8995 15.1184 18.5816 15.2501 18.25 15.2501ZM21 18.0001C20.7527 18.0001 20.5109 17.9267 20.3053 17.7892C20.0996 17.6517 19.9394 17.4563 19.8449 17.2277C19.7504 16.9991 19.7258 16.7476 19.7743 16.5051C19.8228 16.2625 19.9421 16.0398 20.1173 15.8651C20.2924 15.6904 20.5154 15.5716 20.7581 15.5237C21.0008 15.4758 21.2522 15.501 21.4806 15.5961C21.7089 15.6912 21.9039 15.8519 22.0409 16.0579C22.1779 16.2639 22.2507 16.5058 22.25 16.7532C22.2492 17.0842 22.1172 17.4013 21.8828 17.6351C21.6485 17.8688 21.331 18.0001 21 18.0001ZM21 12.5001C20.7528 12.5001 20.5111 12.4268 20.3056 12.2894C20.1 12.1521 19.9398 11.9568 19.8452 11.7284C19.7506 11.5 19.7258 11.2487 19.7741 11.0062C19.8223 10.7637 19.9413 10.541 20.1162 10.3662C20.291 10.1914 20.5137 10.0723 20.7562 10.0241C20.9987 9.97586 21.25 10.0006 21.4784 10.0952C21.7068 10.1898 21.902 10.35 22.0394 10.5556C22.1767 10.7612 22.25 11.0028 22.25 11.2501C22.25 11.5816 22.1184 11.8995 21.8839 12.134C21.6495 12.3684 21.3316 12.5001 21 12.5001ZM23.75 15.2501C23.5028 15.2501 23.2611 15.1768 23.0556 15.0394C22.85 14.9021 22.6898 14.7068 22.5952 14.4784C22.5006 14.25 22.4758 13.9987 22.5241 13.7562C22.5723 13.5137 22.6913 13.291 22.8662 13.1162C23.041 12.9414 23.2637 12.8223 23.5062 12.7741C23.7487 12.7259 24 12.7506 24.2284 12.8452C24.4568 12.9398 24.652 13.1 24.7894 13.3056C24.9267 13.5112 25 13.7528 25 14.0001C25 14.3316 24.8684 14.6495 24.6339 14.884C24.3995 15.1184 24.0816 15.2501 23.75 15.2501Z"
      fill={fill}
    />
  </Svg>
)
const User = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={32} height={32} viewBox="0 0 32 32" fill="none" {...props}>
    <G clipPath="url(#clip0_1158_5352)">
      <Path
        d="M21.3333 18.667C23.0513 18.6671 24.7029 19.3304 25.9437 20.5185C27.1845 21.7067 27.9188 23.328 27.9933 25.0443L28 25.3337V26.667C28.0002 27.3398 27.7461 27.9877 27.2887 28.4811C26.8312 28.9744 26.2042 29.2765 25.5333 29.327L25.3333 29.3337H6.66667C5.9939 29.3339 5.34591 29.0798 4.8526 28.6223C4.35929 28.1649 4.05712 27.5379 4.00667 26.867L4 26.667V25.3337C4.0001 23.6157 4.66339 21.9641 5.85155 20.7233C7.0397 19.4825 8.661 18.7482 10.3773 18.6737L10.6667 18.667H21.3333ZM16 2.66699C17.7681 2.66699 19.4638 3.36937 20.714 4.61961C21.9643 5.86986 22.6667 7.56555 22.6667 9.33366C22.6667 11.1018 21.9643 12.7975 20.714 14.0477C19.4638 15.2979 17.7681 16.0003 16 16.0003C14.2319 16.0003 12.5362 15.2979 11.286 14.0477C10.0357 12.7975 9.33333 11.1018 9.33333 9.33366C9.33333 7.56555 10.0357 5.86986 11.286 4.61961C12.5362 3.36937 14.2319 2.66699 16 2.66699Z"
        fill={fill}
      />
    </G>
    <Defs>
      <ClipPath id="clip0_1158_5352">
        <Rect width={32} height={32} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)
const Tree = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={20} height={16} viewBox="0 0 20 16" fill="none" {...props}>
    <Path
      d="M0.187265 7.40203C0.973783 7.11556 1.7603 6.78385 2.56554 6.5426C3.42697 6.2712 4.32584 6.1355 5.26217 6.16566C7.603 6.25613 9.28839 7.68851 9.26966 9.57323C9.26966 9.92002 9.58801 10.0708 9.75655 10.3271C9.79401 10.2668 9.79401 10.2216 9.79401 10.1763C9.75655 9.73908 9.75655 9.30183 9.70037 8.87965C9.53184 7.32665 9.00749 5.84903 8.20225 4.41664C8.10861 4.25079 7.9588 4.16032 7.75281 4.10001C6.94756 3.87384 6.36704 3.45167 6.01124 2.83348C5.52435 1.98913 5.48689 1.09954 5.69288 0.209954C5.73034 0.0290206 5.89888 -0.0463682 6.1236 0.0290205C7.02247 0.360731 7.8839 0.752752 8.57678 1.35586C9.34457 2.03436 9.58801 2.80332 9.21348 3.69291C9.17603 3.78338 9.21348 3.904 9.25094 3.97939C9.68165 4.73327 10.0562 5.48716 10.2996 6.28628C10.3745 6.49737 10.4307 6.69338 10.5056 6.90447H10.5993C10.6367 6.75369 10.7491 6.60291 10.7303 6.45214C10.6554 5.92442 10.7116 5.42685 10.9176 4.92929C11.4419 3.60244 12.9026 2.71286 14.6816 2.63747C15.8801 2.57716 17.0225 2.77317 18.1461 3.0898C18.764 3.27073 19.3446 3.48182 20 3.69291C19.9064 3.73814 19.8876 3.75322 19.8689 3.7683C19.4944 3.93415 19.1011 4.08493 18.764 4.29602C18.0337 4.74835 17.5468 5.36654 17.1161 5.9998C16.7041 6.60291 16.1423 7.0854 15.3558 7.37188C14.1948 7.79406 13.0337 7.7639 11.8727 7.40203C11.6854 7.34172 11.6105 7.3568 11.5356 7.50758C11.236 8.09561 11.0487 8.69872 11.0112 9.31691C10.9363 10.1914 10.8989 11.0659 10.8614 11.9404C10.8614 12.0007 10.8614 12.046 10.8427 12.1063C11.1985 12.1666 11.4981 12.3325 11.6667 12.5737C12.603 12.3174 13.4644 12.5285 14.0824 13.222C14.9438 13.0713 15.6929 13.3125 16.4045 13.7196C15.7491 14.3679 14.9064 14.7449 13.97 14.9258C12.9775 15.1068 11.9476 15.1972 10.9363 15.3329C10.0375 15.4535 9.44035 15.3329 8.38066 15.3329C5.57839 15.2018 5.44944 14.7298 3.98877 14.0815C4.28839 13.6744 4.68165 13.4181 5.14981 13.222C5.93633 12.8903 6.7603 12.8903 7.58427 13.1165C7.84644 12.4682 8.42697 12.242 9.10112 12.1515L8.98876 11.5183C8.93258 11.2167 8.8015 10.9151 8.55805 10.6437C8.03371 10.8548 7.47191 11.0358 6.85393 11.0961C6.91011 11.0207 6.94757 10.9755 6.98502 10.9302C6.81648 11.0207 6.68539 11.1262 6.46067 11.1413C4.88764 11.1715 3.68914 10.6287 2.80899 9.58831C2.58427 9.33199 2.34082 9.06059 2.0412 8.86458C1.49813 8.47255 0.917604 8.12577 0.33708 7.7639L0 7.58297C0.0936337 7.46235 0.149813 7.41711 0.187265 7.40203Z"
      fill={fill}
    />
  </Svg>
)
const Fire = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    width={props.width || 32}
    height={props.height || 32}
    viewBox="0 0 32 32"
    fill="none"
    {...props}
  >
    <Path
      d="M26 19.3399C26 25.4399 20.95 30.3449 14.85 29.9809C8.58101 29.6069 4.29001 23.5779 5.09801 17.2759C5.58701 13.4429 7.38401 10.1559 9.34001 7.60594C9.68001 7.16094 10.029 10.7419 10.378 10.3479C10.728 9.94294 13.972 4.32894 15.1 2.35694C15.1485 2.26996 15.2152 2.19444 15.2955 2.13551C15.3758 2.07658 15.4678 2.03562 15.5653 2.01541C15.6628 1.9952 15.7636 1.99622 15.8607 2.0184C15.9577 2.04058 16.0489 2.08339 16.128 2.14394C18.394 3.85394 26 10.2769 26 19.3399Z"
      fill="#FF6723"
    />
    <Path
      d="M23 21.851C23 25.893 19.481 29.142 15.201 28.995C10.581 28.839 7.41299 24.611 8.09099 20.256C9.06999 14.012 15.48 10 15.48 10C15.48 10 23 14.707 23 21.851Z"
      fill="#FFB02E"
    />
  </Svg>
)
const LearnBook = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={30} height={30} viewBox="0 0 30 30" fill="none" {...props}>
    <G clipPath="url(#a)">
      <Path
        d="M4.448 15.688H3.01a.517.517 0 0 0-.507.419L.238 27.735a1.035 1.035 0 0 0 1.019 1.23h11.157c0 .57 1.158 1.035 2.586 1.035s2.586-.465 2.586-1.034h11.157a1.035 1.035 0 0 0 1.02-1.232l-2.266-11.627a.518.518 0 0 0-.507-.419H4.448Z"
        fill="#E64C3C"
      />
      <Path
        d="M15 17.193v9.704a11.984 11.984 0 0 0-2.353-.745 17.695 17.695 0 0 0-9.254.47.52.52 0 0 1-.667-.579l1.722-10.355.145-.874a.522.522 0 0 1 .435-.43c.351-.051.713-.103 1.075-.144a3.69 3.69 0 0 0 4.557 1.774 2.72 2.72 0 0 0 2.576 1.836A2.673 2.673 0 0 0 15 17.193Z"
        fill="#F5EFCA"
      />
      <Path
        d="M26.607 26.622a17.696 17.696 0 0 0-9.254-.47c-.808.166-1.596.416-2.353.745v-9.704a2.34 2.34 0 0 0 .3-.295 4.39 4.39 0 0 0 1.624.31h.031c.027.37.168.723.404 1.01.502.496 1.13.846 1.815 1.013a2.83 2.83 0 0 1 1.283.848 1.096 1.096 0 0 0 1.267.326 1.08 1.08 0 0 0 .6-1.319 5.251 5.251 0 0 0-.176-.476c-.13-.32-.3-.622-.507-.9a3.866 3.866 0 0 0 1.96-2.69c.016-.02.037-.04.052-.061a2.76 2.76 0 0 0 .43-.693c.3.036.595.072.89.119a.522.522 0 0 1 .434.429l.145.874 1.722 10.355a.52.52 0 0 1-.667.58Z"
        fill="#F9EAB0"
      />
      <Path
        d="M17.586 28.966C17.586 29.535 16.428 30 15 30s-2.586-.465-2.586-1.034l.233-2.814c.807.166 1.596.416 2.353.745a11.972 11.972 0 0 1 2.354-.745l.232 2.814Z"
        fill="#C03A2B"
      />
      <Path
        d="M24.31 13.185c0 .372-.077.74-.227 1.08a2.727 2.727 0 0 1-.43.694c-.015.02-.036.041-.051.062a3.864 3.864 0 0 1-1.96 2.69c.206.277.377.579.506.9.068.155.125.315.176.475a1.08 1.08 0 0 1-.6 1.32 1.096 1.096 0 0 1-1.267-.327 2.83 2.83 0 0 0-1.283-.848 3.893 3.893 0 0 1-1.815-1.014 1.792 1.792 0 0 1-.404-1.008h-.03a4.382 4.382 0 0 1-1.625-.31 2.34 2.34 0 0 1-.3.294 2.673 2.673 0 0 1-1.764.657 2.72 2.72 0 0 1-2.576-1.836 3.696 3.696 0 0 1-4.236-5.68 1.603 1.603 0 0 1 1.19-2.105.018.018 0 0 1 .01-.005c-.034-.35.023-.703.166-1.024a2.084 2.084 0 0 1 2.819-1.05 3.054 3.054 0 0 1 2.627-1.495 3 3 0 0 1 2.007.76 1.603 1.603 0 0 1 2.845.233 3.858 3.858 0 0 1 4.283 3.512h.015a1.604 1.604 0 0 1 1.604 1.61 1.659 1.659 0 0 1-.207.796c.343.47.528 1.037.527 1.619Z"
        fill="#FB7B76"
      />
      <Path
        d="M15 1.552a.517.517 0 0 1-.517-.518V.517a.517.517 0 0 1 1.034 0v.517a.517.517 0 0 1-.517.518Zm8.336 3.56a.517.517 0 0 1-.365-.883l.517-.517a.517.517 0 1 1 .731.731l-.517.517a.517.517 0 0 1-.366.152Zm-16.672 0a.517.517 0 0 1-.366-.152l-.517-.517a.517.517 0 1 1 .731-.731l.517.517a.517.517 0 0 1-.365.883Zm3.981-2.177a.517.517 0 0 1-.478-.319l-.593-1.434a.517.517 0 1 1 .955-.396l.594 1.434a.519.519 0 0 1-.478.715Zm8.71 0a.518.518 0 0 1-.478-.715L19.47.786a.517.517 0 1 1 .955.396l-.593 1.434a.517.517 0 0 1-.478.32Zm6.158 6.16a.517.517 0 0 1-.198-.997l1.434-.593a.517.517 0 1 1 .395.956l-1.433.593a.517.517 0 0 1-.198.04Zm-21.026 0a.517.517 0 0 1-.198-.04L2.856 8.46a.517.517 0 1 1 .395-.956l1.434.593a.517.517 0 0 1-.198.996Z"
        fill="#F0C419"
      />
      <Path
        d="M23.654 14.958c-.016.021-.037.042-.052.063a3.794 3.794 0 0 1-.559 1.396c-.27.077-.551.115-.833.114a3.26 3.26 0 0 1-1.474-.357 3.384 3.384 0 0 1-.605-.414 1.793 1.793 0 0 1-2.26-.869.518.518 0 0 1 .926-.465.775.775 0 0 0 1.122.284.758.758 0 0 0 .331-.626.796.796 0 0 0-.078-.346.517.517 0 0 1 .921-.466c.126.253.192.53.192.812a1.788 1.788 0 0 1-.326 1.009c.082.057.165.114.248.16.31.16.654.243 1.003.243a2.172 2.172 0 0 0 1.444-.538Zm-6.326-2.03a3.088 3.088 0 0 0 1.282-1.969.517.517 0 1 0-1.016-.194 2.061 2.061 0 0 1-.857 1.313 2.111 2.111 0 0 1-2.722-.31.518.518 0 1 0-.766.697 3.119 3.119 0 0 0 1.658.956 1.54 1.54 0 0 1-1.259.648.517.517 0 1 0 0 1.034 2.565 2.565 0 0 0 2.41-1.659c.456-.075.89-.252 1.27-.516Zm4.82 5.682a4.03 4.03 0 0 1-1.21.393.517.517 0 1 1-.16-1.024c.3-.045.59-.136.863-.269.207.277.378.58.507.9ZM10.624 15a2.59 2.59 0 0 0-.041.44c-.001.193.025.387.077.574a3.87 3.87 0 0 1-1.008.217 3.19 3.19 0 0 1-.104-.776 1.798 1.798 0 0 1-1.603-1.784.524.524 0 0 1 .714-.49.516.516 0 0 1 .32.474v.016a.776.776 0 0 0 .74.76c.071-.233.17-.457.295-.667a.51.51 0 0 1 .708-.176c.244.15.322.467.176.714a2.163 2.163 0 0 0-.274.698Zm7.691 3.026a4.38 4.38 0 0 1-.956.191 1.792 1.792 0 0 1-.404-1.009 3.924 3.924 0 0 0 1.055-.17.518.518 0 1 1 .305.988Zm-4.453-9.233a.517.517 0 0 0-.517-.517 2.382 2.382 0 0 0-2.38 2.379.517.517 0 0 0 1.035 0 1.345 1.345 0 0 1 1.345-1.345.517.517 0 0 0 .517-.517ZM7.112 11.7a.512.512 0 0 1-.267-.074 2.128 2.128 0 0 1 1.09-3.95 2.1 2.1 0 0 1 1.701.857.518.518 0 0 1-.83.617 1.073 1.073 0 0 0-1.528-.213 1.093 1.093 0 0 0 .1 1.803.517.517 0 0 1-.267.96ZM18.21 6.78a.517.517 0 0 1-.517-.517 1.088 1.088 0 1 0-2.176 0 .517.517 0 0 1-1.034 0 2.122 2.122 0 1 1 4.245 0 .517.517 0 0 1-.518.517Zm4.852 5.964a.517.517 0 0 1-.22-.983c.206-.096.378-.255.49-.453a1.087 1.087 0 0 0-1.6-1.41.517.517 0 1 1-.62-.828 2.101 2.101 0 0 1 1.257-.426 2.127 2.127 0 0 1 .915 4.053.51.51 0 0 1-.222.047Z"
        fill="#FF5364"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h30v30H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)
const TaskFlag = ({ ...props }: Props) => (
  <Svg width={24} height={33} viewBox="0 0 24 33" fill="none" {...props}>
    <G filter="url(#filter0_i_1602_3998)">
      <Path
        d="M4.77 0C3.11814 0 2.29221 0 1.65906 0.316366C1.07792 0.606746 0.606746 1.07792 0.316366 1.65906C0 2.29221 0 3.11814 0 4.77V23.2213C0 24.2058 0 24.6981 0.140008 25.1401C0.269203 25.5481 0.48417 25.9236 0.770478 26.2416C1.08075 26.5863 1.50521 26.8356 2.35413 27.3342L9.58413 31.581C10.4542 32.092 10.8892 32.3475 11.3519 32.4499C11.7788 32.5444 12.2212 32.5444 12.6481 32.4499C13.1108 32.3475 13.5458 32.092 14.4159 31.581L21.6459 27.3342C22.4948 26.8356 22.9193 26.5863 23.2295 26.2416C23.5158 25.9236 23.7308 25.5481 23.86 25.1401C24 24.6981 24 24.2058 24 23.2213V4.77C24 3.11814 24 2.29221 23.6836 1.65906C23.3933 1.07792 22.9221 0.606746 22.3409 0.316366C21.7078 0 20.8819 0 19.23 0H4.77Z"
        fill="#FF7256"
      />
    </G>
    <Defs></Defs>
  </Svg>
)
const DictionaryColorized = ({ ...props }: Props) => (
  <Svg width={40} height={40} viewBox="0 0 40 40" fill="none" {...props}>
    <Path
      d="M33.125 3.75h-2.5v8.125h2.5A1.875 1.875 0 0 0 35 10V5.625a1.875 1.875 0 0 0-1.875-1.875Zm0 9.375h-2.5v8.125h2.5A1.875 1.875 0 0 0 35 19.375V15a1.875 1.875 0 0 0-1.875-1.875Zm0 9.375h-2.5v8.125h2.5A1.875 1.875 0 0 0 35 28.75v-4.375a1.875 1.875 0 0 0-1.875-1.875Z"
      fill="#FB8C00"
    />
    <Path
      d="M31.875 3.125V32.5H8.75a.631.631 0 0 1-.625-.625v-30a.627.627 0 0 1 .625-.625H30a1.88 1.88 0 0 1 1.875 1.875Z"
      fill="#FFB300"
    />
    <Path
      d="M8.75 1.25V32.5C8.675 32.481 5 35.344 5 35V4.456a1.867 1.867 0 0 1 .912-1.606L8.4 1.356l.031-.018a.61.61 0 0 1 .319-.088Z"
      fill="#FFA000"
    />
    <Path
      d="M31.866 31.25H8.746a3.75 3.75 0 1 0 .004 7.5h21.563a1.565 1.565 0 0 0 1.562-1.563c0-.86-.01-5.937-.01-5.937Z"
      fill="#FB8C00"
    />
    <Path
      d="M31.875 33.125H8.824a1.925 1.925 0 0 0-1.913 1.501 1.878 1.878 0 0 0 1.839 2.249h23.125v-3.75Zm-5-27.5h-13.75c-1.036 0-1.875.84-1.875 1.875v6.875c0 1.036.84 1.875 1.875 1.875h13.75c1.035 0 1.875-.84 1.875-1.875V7.5c0-1.036-.84-1.875-1.875-1.875Z"
      fill="#EEE"
    />
    <Path
      d="M15.074 13.701a1.013 1.013 0 0 1-.63-.236.296.296 0 0 1-.105-.326l1.395-4.575c.09-.294.478-.388.765-.39.294.003.674.094.765.39l1.403 4.575a.297.297 0 0 1-.105.326.992.992 0 0 1-.63.236c-.173-.003-.329-.042-.383-.217l-.255-.938h-1.582l-.255.938c-.044.177-.214.214-.383.217Zm.878-2.055h1.095l-.548-2.01-.547 2.01Zm3.345-.232c-.476-.003-.47-.941 0-.953h1.95c.472.032.48.93 0 .953h-1.95Zm2.828 2.265c-.427.012-.387-.443-.21-.72l2.115-3.743h-1.74c-.469-.018-.486-1.007 0-1.02h2.895a.294.294 0 0 1 .338.308.883.883 0 0 1-.128.412L23.28 12.66h2.04c.473.027.473.994 0 1.02h-3.195Z"
      fill="#E53935"
    />
    <Path
      d="M27.5 21.875h-15a.624.624 0 1 1 0-1.25h15a.624.624 0 1 1 0 1.25Zm0 2.5h-15a.624.624 0 1 1 0-1.25h15a.624.624 0 1 1 0 1.25Zm0 2.5h-15a.624.624 0 1 1 0-1.25h15a.624.624 0 1 1 0 1.25Z"
      fill="#EEE"
    />
  </Svg>
)
const Video = ({ ...props }: Props) => (
  <Svg width={40} height={40} viewBox="0 0 40 40" fill="none" {...props}>
    <G clipPath="url(#clip0_205_1742)">
      <Path
        d="M35.3672 3.625H4.63281C2.07031 3.625 0 5.70312 0 8.25781V27.3672C0 29.9219 2.07031 31.9922 4.63281 31.9922H14.625L18.2969 35.6641C19.2422 36.6094 20.7734 36.6094 21.7188 35.6641L25.3906 31.9922H35.375C37.9297 31.9922 40.0078 29.9219 40.0078 27.3672V8.25781C40 5.70312 37.9297 3.625 35.3672 3.625Z"
        fill="#FF2147"
      />
      <Path
        d="M20 8.83594C15.0391 8.83594 11.0156 12.8594 11.0156 17.8203C11.0156 22.7813 15.0391 26.8047 20 26.8047C24.9609 26.8047 28.9844 22.7813 28.9844 17.8203C28.9844 12.8594 24.9609 8.83594 20 8.83594ZM24.6562 19.0156C22.5781 20.3047 20.4922 21.5937 18.4141 22.8828C17.9453 23.1719 17.4687 23.2344 16.9844 22.9609C16.5 22.6875 16.3281 22.25 16.3281 21.7109C16.3359 20.4141 16.3281 19.1172 16.3281 17.8203C16.3281 16.5234 16.3359 15.2266 16.3281 13.9297C16.3281 13.3906 16.5 12.9531 16.9844 12.6797C17.4766 12.3984 17.9453 12.4844 18.4141 12.7734C20.4922 14.0703 22.5703 15.3594 24.6484 16.6562C25.6328 17.2812 25.6406 18.3984 24.6562 19.0156Z"
        fill="white"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_205_1742">
        <Rect width={40} height={40} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)
const CheckIcon = (props: Props) => (
  <Svg width={51} height={50} fill="none" {...props}>
    <Circle cx={25} cy={25} r={25} fill="#fff" />
    <Path
      stroke="#22B07D"
      strokeLinecap="round"
      strokeWidth={8}
      d="M32.726 18.75 19.942 31.429M14.87 27.262l5.072 4.167"
    />
  </Svg>
)

const IncorrectIcon = (props: Props) => (
  <Svg width={51} height={50} fill="none" {...props}>
    <Ellipse cx={24.793} cy={25} fill="#fff" rx={24.793} ry={25} />
    <Path
      stroke="#FF4B4D"
      strokeLinecap="round"
      strokeWidth={8}
      d="m32.164 19-14 14M18.164 19l14 14"
    />
  </Svg>
)
const Delete = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg width={24} height={24} viewBox="0 0 24 24" fill="none" {...props}>
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M5.46967 5.46967C5.76256 5.17678 6.23744 5.17678 6.53033 5.46967L12 10.9393L17.4697 5.46967C17.7626 5.17678 18.2374 5.17678 18.5303 5.46967C18.8232 5.76256 18.8232 6.23744 18.5303 6.53033L13.0607 12L18.5303 17.4697C18.8232 17.7626 18.8232 18.2374 18.5303 18.5303C18.2374 18.8232 17.7626 18.8232 17.4697 18.5303L12 13.0607L6.53033 18.5303C6.23744 18.8232 5.76256 18.8232 5.46967 18.5303C5.17678 18.2374 5.17678 17.7626 5.46967 17.4697L10.9393 12L5.46967 6.53033C5.17678 6.23744 5.17678 5.76256 5.46967 5.46967Z"
      fill={fill}
    />
  </Svg>
)
const QuestionMark = ({ ...props }: Props) => (
  <Svg
    width={30}
    height={30}
    viewBox="0 0 30 30"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <G clipPath="url(#clip0_657_2402)">
      <Path
        d="M17.4805 16.793L22.7468 12.6676L23.569 5.48551L17.4805 2.13371L15.0089 5.53039C16.288 6.17264 17.1964 7.45473 17.3056 8.95051C17.4427 10.832 16.3018 12.5837 14.5301 13.2097C12.176 14.0427 10.5939 16.29 10.5939 18.8022V19.8815C10.5939 21.2874 11.7336 22.427 13.1388 22.427H16.8613L17.4805 16.793ZM10.1379 11.8138H6.41556C5.00989 11.8138 3.87036 10.6743 3.87036 9.26861C3.87036 8.83772 3.90042 8.40389 3.95966 7.9792C4.62651 3.2 8.93046 -0.296698 13.758 0.0201767H17.481L14.8324 2.69445M16.8614 24.8884H13.139C11.7333 24.8884 10.5938 26.0279 10.5938 27.4336V27.4547C10.5938 28.8604 11.7333 29.9999 13.139 29.9999H16.4087"
        fill="#FE9738"
      />
      <Path
        d="M16.8614 22.4267C15.4558 22.4267 14.3162 21.2872 14.3162 19.8815V18.8019C14.3162 16.2897 15.8982 14.0425 18.2529 13.21C20.024 12.5837 21.1653 10.8322 21.0281 8.95063C20.8779 6.89029 19.2098 5.23479 17.1479 5.09979C14.967 4.9557 13.0239 6.53076 12.7237 8.68268C12.6967 8.87684 12.6832 9.07264 12.6832 9.26867C12.6832 10.6743 11.5437 11.8139 10.138 11.8139C8.73237 11.8139 7.59283 10.6743 7.59283 9.26867C7.59283 8.83777 7.62289 8.40395 7.68213 7.97926C8.34899 3.2 12.6529 -0.296698 17.4805 0.0201767C22.0634 0.320294 25.7713 4.00045 26.1051 8.58049C26.4085 12.7432 23.8774 16.6204 19.9498 18.0092C19.6249 18.1241 19.4067 18.4426 19.4067 18.8019V19.8815C19.4067 21.2872 18.2672 22.4267 16.8614 22.4267ZM16.8614 30C15.4558 30 14.3162 28.8604 14.3162 27.4548V27.4337C14.3162 26.028 15.4558 24.8885 16.8614 24.8885C18.2671 24.8885 19.4066 26.028 19.4066 27.4337V27.4548C19.4067 28.8604 18.2672 30 16.8614 30Z"
        fill="#FFD15B"
      />
      <Path
        d="M9.93201 7.97951C9.87242 8.40663 9.84268 8.83738 9.84301 9.26863C9.84301 10.2704 10.4214 11.1374 11.263 11.5519C10.9132 11.7248 10.5281 11.8145 10.1379 11.8138C8.73313 11.8138 7.59277 10.6748 7.59277 9.26869C7.59277 8.83773 7.6233 8.4042 7.68301 7.97957C8.34922 3.19943 12.6539 -0.296682 17.481 0.0199C17.6539 0.0313258 17.8255 0.0478492 17.9959 0.0694703C13.9087 0.572908 10.5181 3.78168 9.93201 7.97951ZM20.5029 13.2096C18.1484 14.0423 16.5657 16.29 16.5657 18.8021V19.8815C16.5657 20.8833 17.1454 21.7503 17.987 22.1648C17.6372 22.3377 17.2521 22.4273 16.8619 22.4267C15.4558 22.4267 14.3168 21.2876 14.3168 19.8815V18.8021C14.3168 16.29 15.8983 14.0424 18.254 13.2096C20.0249 12.5829 21.1653 10.8323 21.028 8.95076C20.8996 7.18111 19.6511 5.71017 17.9946 5.24617C18.4507 5.11783 18.9254 5.06839 19.3981 5.09998C21.4602 5.23474 23.1281 6.88996 23.2781 8.95076C23.4154 10.8323 22.2738 12.5829 20.5029 13.2096ZM17.987 29.7379C17.6371 29.9108 17.2521 30.0004 16.8618 29.9998C15.4558 29.9998 14.3167 28.8607 14.3167 27.4547V27.433C14.3167 26.0283 15.4558 24.8879 16.8618 24.8879C17.2661 24.8879 17.6475 24.982 17.987 25.1498C17.1454 25.5655 16.5656 26.4326 16.5656 27.4331V27.4547C16.5656 28.4564 17.1454 29.3235 17.987 29.7379Z"
        fill="#FFC344"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_657_2402">
        <Rect width={30} height={30} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)
const Present = ({ ...props }: Props) => (
  <Svg width={25} height={25} viewBox="0 0 25 25" fill="none" {...props}>
    <G clipPath="url(#clip0_405_811)">
      <Path
        opacity={0.2}
        d="M17.9866 24.2323C17.7895 24.2667 17.5897 24.2838 17.3896 24.2834L6.72328 24.2595C5.78903 24.2493 4.89705 23.8686 4.24335 23.2011C3.58964 22.5336 3.22768 21.6338 3.237 20.6996L3.24767 14.0809C3.24782 13.9691 3.25594 13.8574 3.27196 13.7468C2.73653 13.4796 2.28518 13.0699 1.96761 12.5628C1.65003 12.0556 1.47854 11.4707 1.47201 10.8723L1.47768 9.31386C1.49743 8.53183 1.79211 7.78177 2.30995 7.19543C2.82779 6.60909 3.53568 6.22396 4.30927 6.10771C4.52084 6.07071 4.73527 6.05249 4.95005 6.05324L5.13946 6.05409C5.06179 5.43927 5.12469 4.81483 5.3234 4.22784C5.52212 3.64086 5.85148 3.10663 6.28666 2.66542C6.6903 2.23441 7.18562 1.8996 7.73603 1.68573C8.28644 1.47185 8.87787 1.38438 9.46662 1.42976C10.4363 1.52787 11.3584 1.89805 12.1267 2.49763C12.7884 1.99547 13.5568 1.65223 14.3723 1.49444C14.5088 1.47068 14.6465 1.45409 14.7864 1.44349C15.3758 1.40218 15.967 1.493 16.5169 1.70934C17.0667 1.92567 17.5614 2.26205 17.9646 2.69393C18.3983 3.13583 18.7259 3.67044 18.9228 4.25744C19.1197 4.84444 19.1808 5.4685 19.1013 6.08252L19.2408 6.08253C20.1335 6.05996 20.9987 6.39181 21.6472 7.00548C22.2958 7.61916 22.675 8.46471 22.7018 9.3572L22.6983 10.9163C22.6895 11.5153 22.5152 12.1002 22.1946 12.6063C21.8741 13.1123 21.4198 13.5199 20.882 13.7839C20.898 13.8939 20.9056 14.005 20.905 14.1161L20.8947 20.7369C20.9003 21.569 20.6115 22.3763 20.0793 23.016C19.5471 23.6557 18.8058 24.0865 17.9866 24.2323Z"
        fill="#1A1A1A"
      />
      <Path
        d="M17.8233 23.2944C17.6261 23.3289 17.4264 23.3459 17.2263 23.3455L6.55994 23.3216C5.62628 23.3103 4.73525 22.9291 4.0824 22.2615C3.42956 21.594 3.06825 20.6946 3.07776 19.761L3.08843 13.1423C3.08858 13.0305 3.0967 12.9188 3.11273 12.8082C2.57663 12.5416 2.12452 12.1323 1.8062 11.6252C1.48788 11.1182 1.31571 10.5331 1.30867 9.93441L1.31434 8.37596C1.33409 7.59393 1.62877 6.84387 2.14661 6.25753C2.66445 5.67119 3.37234 5.28606 4.14593 5.16981C4.35757 5.1333 4.57195 5.11508 4.78671 5.11534L4.97613 5.11619C4.89841 4.50151 4.9613 3.8772 5.16005 3.29036C5.35881 2.70353 5.68824 2.16949 6.1235 1.72855C6.52688 1.2972 7.02211 0.962086 7.57253 0.748018C8.12295 0.533949 8.71446 0.446403 9.30328 0.491859C10.2729 0.589965 11.1951 0.960151 11.9634 1.55972C12.6248 1.05689 13.393 0.712937 14.2086 0.554486C14.3451 0.530722 14.4828 0.514141 14.6227 0.503539C15.2121 0.462224 15.8033 0.553048 16.3532 0.769381C16.9031 0.985714 17.3977 1.3221 17.8009 1.75398C18.2342 2.19568 18.5617 2.72997 18.7585 3.31659C18.9553 3.9032 19.0164 4.52684 18.9372 5.14051L19.077 5.14155C19.9695 5.11848 20.8349 5.45002 21.4835 6.06358C22.1321 6.67714 22.5112 7.52273 22.5377 8.41519L22.5343 9.97431C22.5254 10.5733 22.3511 11.1582 22.0306 11.6643C21.71 12.1703 21.2557 12.5779 20.718 12.8419C20.7339 12.9519 20.7416 13.063 20.741 13.1741L20.7306 19.7949C20.7373 20.6276 20.449 21.4358 19.9169 22.0763C19.3847 22.7168 18.6431 23.1483 17.8233 23.2944Z"
        fill="#F2F2F2"
      />
      <Path
        d="M18.8341 13.1775L18.8234 19.7962C18.827 20.009 18.7886 20.2204 18.7104 20.4183C18.6321 20.6163 18.5156 20.7969 18.3675 20.9497C18.2194 21.1026 18.0426 21.2248 17.8473 21.3092C17.6519 21.3937 17.4418 21.4388 17.229 21.442L6.55955 21.4187C6.13091 21.4087 5.72371 21.2292 5.42719 20.9195C5.13068 20.6098 4.96904 20.1952 4.97771 19.7666L4.98838 13.1479C4.98843 13.0888 5.00015 13.0304 5.02286 12.9759C5.04558 12.9215 5.07883 12.872 5.12072 12.8304C5.16261 12.7888 5.2123 12.7559 5.26695 12.7336C5.32159 12.7113 5.38011 12.7 5.43913 12.7004L18.3868 12.7278C18.4457 12.7278 18.504 12.7395 18.5584 12.7622C18.6128 12.7849 18.6622 12.818 18.7038 12.8598C18.7453 12.9016 18.7782 12.9511 18.8006 13.0057C18.8229 13.0602 18.8343 13.1186 18.8341 13.1775ZM20.6297 8.41768L20.625 9.97595C20.5952 10.362 20.4149 10.7209 20.1229 10.9753C19.831 11.2296 19.4508 11.3591 19.0643 11.3357L4.77366 11.3074C4.38597 11.3307 4.00471 11.2003 3.71255 10.9444C3.42038 10.6885 3.24086 10.3277 3.2129 9.9403L3.21822 8.3798C3.24776 7.99364 3.42799 7.63459 3.72 7.38018C4.01202 7.12577 4.39237 6.99642 4.77894 7.02006L8.03469 7.02732C7.61423 6.6066 7.27676 6.11045 7.03991 5.56483C6.85124 5.15019 6.79324 4.68795 6.87363 4.23955C6.95401 3.79116 7.16898 3.37785 7.48995 3.05459C7.69969 2.82441 7.95924 2.64521 8.2488 2.53065C8.53836 2.4161 8.85027 2.36923 9.16071 2.39362C10.2703 2.62401 11.2619 3.24136 11.9582 4.1354C12.657 3.2438 13.65 2.62977 14.7599 2.4031C15.0704 2.3804 15.382 2.42883 15.671 2.5447C15.9599 2.66057 16.2187 2.84083 16.4275 3.07176C16.747 3.3969 16.96 3.81157 17.0382 4.26067C17.1164 4.70977 17.056 5.17203 16.8652 5.58602C16.6257 6.13014 16.286 6.62436 15.8638 7.04293L19.0699 7.05038C19.4576 7.02681 19.8389 7.15721 20.131 7.41325C20.4231 7.66928 20.6023 8.03025 20.6297 8.41768ZM12.641 7.03629L13.538 7.0387C14.4808 6.6255 15.239 5.88057 15.6688 4.94529C15.7321 4.79557 15.7479 4.63007 15.7142 4.47108C15.6804 4.3121 15.5988 4.16728 15.4802 4.05614C15.4041 3.966 15.3079 3.89515 15.1992 3.84938C15.0905 3.80362 14.9725 3.78423 14.8549 3.79282C13.9571 4.0748 13.1786 4.64742 12.6419 5.4205L12.641 7.03629ZM10.3848 7.03155L11.2627 7.03307L11.2671 5.41881C10.7253 4.736 9.78099 3.83673 9.06407 3.78181L9.00138 3.78004C8.89389 3.78053 8.78779 3.80431 8.69038 3.84975C8.59297 3.89518 8.50657 3.96119 8.43712 4.04323C8.31839 4.15375 8.23632 4.29794 8.20193 4.45646C8.16753 4.61498 8.18246 4.78022 8.24471 4.93C8.67172 5.87242 9.4348 6.62175 10.3848 7.03155Z"
        fill="#FAB400"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_405_811">
        <Rect width={25} height={25} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)
const QuestionCircle = ({ ...props }: Props) => (
  <Svg width={18} height={18} viewBox="0 0 18 18" fill="none" {...props}>
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M1.6875 9C1.6875 4.96142 4.96142 1.6875 9 1.6875C13.0386 1.6875 16.3125 4.96142 16.3125 9C16.3125 13.0386 13.0386 16.3125 9 16.3125C4.96142 16.3125 1.6875 13.0386 1.6875 9ZM10.2208 6.06246C9.55415 5.47918 8.44619 5.47918 7.77959 6.06246C7.54579 6.26703 7.19043 6.24334 6.98586 6.00954C6.78128 5.77575 6.80498 5.42038 7.03877 5.21581C8.12953 4.2614 9.87081 4.2614 10.9616 5.21581C12.0964 6.20876 12.0964 7.85374 10.9616 8.84669C10.7691 9.01512 10.5571 9.15309 10.3335 9.26127C9.82633 9.50674 9.56267 9.84163 9.56267 10.125V10.6875C9.56267 10.9982 9.31083 11.25 9.00017 11.25C8.68951 11.25 8.43767 10.9982 8.43767 10.6875V10.125C8.43767 9.16573 9.23213 8.54448 9.84346 8.24862C9.98044 8.18233 10.1074 8.09925 10.2208 8.00004C10.8433 7.4553 10.8433 6.6072 10.2208 6.06246ZM9 13.5C9.31066 13.5 9.5625 13.2482 9.5625 12.9375C9.5625 12.6268 9.31066 12.375 9 12.375C8.68934 12.375 8.4375 12.6268 8.4375 12.9375C8.4375 13.2482 8.68934 13.5 9 13.5Z"
      fill="#F4B80A"
    />
  </Svg>
)
const Honey = ({ ...props }: Props) => (
  <Svg width={15} height={15} viewBox="0 0 15 15" fill="none" {...props}>
    <G clipPath="url(#clip0_382_41467)">
      <Path
        d="M7.51332 15C9.90453 14.9929 11.873 12.9947 11.8548 10.6034C11.8295 7.2639 8.75545 3.72047 7.71465 0.161397C7.68312 0.0535843 7.5916 -0.000146186 7.50011 2.98703e-07C7.40858 -0.000146186 7.31706 0.0535843 7.28553 0.161397C6.24476 3.72047 3.17073 7.2639 3.14539 10.6034C3.12722 12.9947 5.09565 14.9929 7.48686 15"
        fill="#FEB94F"
      />
      <Path
        d="M8.95198 13.7988C8.88557 13.7988 8.82041 13.7807 8.76361 13.7463C8.70681 13.7118 8.66054 13.6625 8.62983 13.6036C8.53722 13.4259 8.60622 13.2067 8.78387 13.1141C9.50305 12.7391 10.0221 12.0733 10.2078 11.2875C10.254 11.0924 10.4487 10.9714 10.6446 11.0177C10.8396 11.0638 10.9603 11.2594 10.9143 11.4543C10.6799 12.4457 10.0257 13.2853 9.11938 13.7576C9.06771 13.7846 9.01028 13.7987 8.95198 13.7988Z"
        fill="#E8FAFF"
      />
      <Path
        d="M8.96479 14.5162H8.93833C6.54712 14.5086 4.57869 12.3815 4.59686 9.83596C4.6157 7.19376 6.31837 4.43162 7.61889 1.63189C7.83205 1.17302 7.85901 0.65417 7.71662 0.168663L7.71451 0.161397C7.68299 0.0535844 7.59147 -0.000146055 7.49997 4.29666e-07C7.40845 -0.000175352 7.31696 0.0535844 7.2854 0.161397C6.1771 3.95139 2.76314 7.72368 3.18027 11.2509C3.43506 13.4056 5.31709 15 7.48676 15H7.51319C8.25829 14.9978 8.96221 14.802 9.57791 14.4615C9.37694 14.4932 9.17326 14.5155 8.96479 14.5162Z"
        fill="#F4B80A"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_382_41467">
        <Rect width={15} height={15} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)
const GoButton = ({ ...props }: Props) => (
  <Svg width={38} height={15} viewBox="0 0 38 15" fill="none" {...props}>
    <G filter="url(#filter0_i_309_1921)">
      <Rect width={38} height={15} rx={7.5} fill="#F4B80A" />
    </G>
    <Path
      d="M15.9381 12.12C15.3301 12.12 14.7621 12.008 14.2341 11.784C13.7061 11.56 13.2421 11.252 12.8421 10.86C12.4421 10.46 12.1261 10 11.8941 9.48C11.6701 8.96 11.5581 8.4 11.5581 7.8C11.5581 7.2 11.6701 6.64 11.8941 6.12C12.1261 5.6 12.4421 5.144 12.8421 4.752C13.2421 4.352 13.7061 4.04 14.2341 3.816C14.7621 3.592 15.3301 3.48 15.9381 3.48C16.3141 3.48 16.6781 3.52 17.0301 3.6C17.3821 3.68 17.7061 3.8 18.0021 3.96C18.1221 4.024 18.2101 4.112 18.2661 4.224C18.3301 4.328 18.3621 4.436 18.3621 4.548C18.3621 4.74 18.2981 4.912 18.1701 5.064C18.0421 5.216 17.8781 5.292 17.6781 5.292C17.6141 5.292 17.5461 5.284 17.4741 5.268C17.4101 5.252 17.3461 5.228 17.2821 5.196C17.0821 5.108 16.8701 5.04 16.6461 4.992C16.4221 4.944 16.1861 4.92 15.9381 4.92C15.4181 4.92 14.9421 5.052 14.5101 5.316C14.0861 5.572 13.7461 5.92 13.4901 6.36C13.2421 6.792 13.1181 7.272 13.1181 7.8C13.1181 8.32 13.2421 8.8 13.4901 9.24C13.7461 9.68 14.0861 10.032 14.5101 10.296C14.9421 10.552 15.4181 10.68 15.9381 10.68C16.1781 10.68 16.4421 10.656 16.7301 10.608C17.0181 10.56 17.2541 10.496 17.4381 10.416L17.3301 10.776V8.724L17.5341 8.904H16.2021C15.9941 8.904 15.8181 8.836 15.6741 8.7C15.5381 8.564 15.4701 8.392 15.4701 8.184C15.4701 7.976 15.5381 7.804 15.6741 7.668C15.8181 7.532 15.9941 7.464 16.2021 7.464H18.1701C18.3781 7.464 18.5501 7.536 18.6861 7.68C18.8221 7.816 18.8901 7.988 18.8901 8.196V10.74C18.8901 10.9 18.8501 11.032 18.7701 11.136C18.6981 11.24 18.6141 11.324 18.5181 11.388C18.1501 11.612 17.7461 11.792 17.3061 11.928C16.8741 12.056 16.4181 12.12 15.9381 12.12ZM26.4416 8.796C26.4416 9.452 26.2936 10.032 25.9976 10.536C25.7096 11.032 25.3176 11.42 24.8216 11.7C24.3336 11.98 23.7856 12.12 23.1776 12.12C22.5696 12.12 22.0176 11.98 21.5216 11.7C21.0336 11.42 20.6416 11.032 20.3456 10.536C20.0576 10.032 19.9136 9.452 19.9136 8.796C19.9136 8.14 20.0576 7.564 20.3456 7.068C20.6416 6.564 21.0336 6.172 21.5216 5.892C22.0176 5.604 22.5696 5.46 23.1776 5.46C23.7856 5.46 24.3336 5.604 24.8216 5.892C25.3176 6.172 25.7096 6.564 25.9976 7.068C26.2936 7.564 26.4416 8.14 26.4416 8.796ZM25.0016 8.796C25.0016 8.388 24.9176 8.036 24.7496 7.74C24.5896 7.436 24.3696 7.2 24.0896 7.032C23.8176 6.864 23.5136 6.78 23.1776 6.78C22.8416 6.78 22.5336 6.864 22.2536 7.032C21.9816 7.2 21.7616 7.436 21.5936 7.74C21.4336 8.036 21.3536 8.388 21.3536 8.796C21.3536 9.196 21.4336 9.548 21.5936 9.852C21.7616 10.148 21.9816 10.38 22.2536 10.548C22.5336 10.716 22.8416 10.8 23.1776 10.8C23.5136 10.8 23.8176 10.716 24.0896 10.548C24.3696 10.38 24.5896 10.148 24.7496 9.852C24.9176 9.548 25.0016 9.196 25.0016 8.796Z"
      fill="white"
    />
    <Defs></Defs>
  </Svg>
)
const StreakFlame = ({ ...props }: Props) => (
  <Svg width={13} height={13} viewBox="0 0 13 13" fill="none" {...props}>
    <Path
      d="M4.92043 2.54909C4.96422 2.47737 5.00924 2.4034 5.05496 2.32812C5.38523 1.78417 5.74797 1.17726 5.93557 0.861015C5.98819 0.771066 6.05921 0.694358 6.1429 0.635127C6.22748 0.575259 6.32333 0.534393 6.42374 0.514331C6.52414 0.494272 6.6277 0.495277 6.72771 0.517306M4.92043 2.54909L6.72771 0.517306M4.92043 2.54909C4.90765 2.5286 4.89329 2.50807 4.87721 2.48829C4.84154 2.44441 4.72037 2.3072 4.50591 2.29083C4.26259 2.27226 4.1117 2.41948 4.05527 2.4904L4.92043 2.54909ZM6.72771 0.517306C6.82705 0.539186 6.9215 0.581515 7.00451 0.642424M6.72771 0.517306L7.00451 0.642424M10.5 6.57344C10.5 8.83132 8.56513 10.626 6.25455 10.4931C3.84585 10.3545 2.23329 8.12897 2.53687 5.84441L10.5 6.57344ZM10.5 6.57344C10.5 4.96831 9.80189 3.61889 9.03456 2.61897C8.26709 1.61887 7.40407 0.933279 7.00451 0.642424M10.5 6.57344L7.00451 0.642424M4.05122 3.03756C4.05126 3.03736 4.05239 3.03983 4.05448 3.04556C4.05223 3.04062 4.05119 3.03776 4.05122 3.03756Z"
      fill="#FF6723"
      stroke="white"
    />
    <Path
      d="M9 7.3662C9 8.85538 7.82703 10.0524 6.40039 9.99823C4.86043 9.94076 3.80446 8.38306 4.03045 6.77857C4.35678 4.47812 6.49339 3 6.49339 3C6.49339 3 9 4.73418 9 7.3662Z"
      fill="#FFB02E"
    />
  </Svg>
)
const Money = ({ ...props }: Props) => (
  <Svg width={25} height={25} viewBox="0 0 25 25" fill="none" {...props}>
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.6599 9.45086C12.0335 8.36585 13.992 6.06375 17.034 4.30701C20.0746 2.55169 23.0484 2.00633 23.6747 3.09134C24.0212 3.69207 24.3677 4.2928 24.7157 4.89495C25.342 5.97855 23.3835 8.28064 20.3415 10.0374C17.2996 11.7927 14.3271 12.3381 13.7008 11.2545C13.3543 10.6523 13.0064 10.0516 12.6599 9.45086Z"
      fill="#FE9923"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.034 4.30701C20.0746 2.55169 23.0484 2.00633 23.6747 3.09134C24.301 4.17493 22.3426 6.47703 19.3006 8.23377C16.2586 9.99051 13.2862 10.5345 12.6599 9.45086C12.0335 8.36585 13.992 6.06375 17.034 4.30701Z"
      fill="#FECD3D"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.5637 5.22456C19.9837 3.82852 22.2148 3.16392 22.5485 3.74048C22.8823 4.31851 21.1908 5.91905 18.7708 7.31646C16.3509 8.71392 14.1183 9.37857 13.786 8.80054C13.4523 8.22256 15.1437 6.62203 17.5637 5.22456Z"
      fill="#FEA832"
    />
    <Path
      d="M23.4475 6.13599L24.0014 7.096C24.1334 6.93408 24.2527 6.77505 24.355 6.6188L23.9176 5.86328L23.4475 6.13599ZM22.9731 8.1583C22.8359 8.28085 22.6962 8.40065 22.5542 8.51763L22.0259 7.60161L22.4959 7.33179L22.9731 8.1583ZM21.4053 9.37114C21.2555 9.47316 21.104 9.57259 20.9508 9.66938L20.4467 8.796L20.9167 8.52617L21.4053 9.37114ZM19.7195 10.3794C19.5562 10.4661 19.3943 10.547 19.2338 10.6266L18.7438 9.78013L19.2153 9.50747L19.7195 10.3794ZM17.9202 11.1932C17.7478 11.2582 17.5741 11.3193 17.399 11.3764L16.9204 10.5499L17.3918 10.2787L17.9202 11.1932ZM15.9646 11.7357C15.7587 11.7698 15.5612 11.7925 15.3752 11.8039L14.9392 11.0483L15.4107 10.7757L15.9646 11.7357Z"
      fill="#C85929"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.1969 14.1587C12.8232 13.0751 10.8648 10.7716 7.82281 9.01624C4.78223 7.2595 1.80836 6.71555 1.18209 7.79915C0.835553 8.39988 0.489069 9.00203 0.14112 9.60276C-0.485199 10.6864 1.47325 12.9899 4.51524 14.7452C7.55723 16.5019 10.5297 17.0459 11.156 15.9623C11.5039 15.3616 11.8503 14.7594 12.1969 14.1587Z"
      fill="#FE9923"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M7.82274 9.01624C4.78217 7.2595 1.80829 6.71555 1.18202 7.79915C0.557167 8.88416 2.51557 11.1863 5.55614 12.9416C8.59813 14.6983 11.572 15.2423 12.1969 14.1587C12.8232 13.0751 10.8647 10.7716 7.82274 9.01624Z"
      fill="#FECD3D"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M7.29306 9.93385C4.8745 8.53638 2.64198 7.87179 2.30824 8.44976C1.9745 9.02638 3.66591 10.6283 6.08588 12.0243C8.50585 13.4218 10.7384 14.0864 11.0721 13.5084C11.4044 12.9318 9.71303 11.3313 7.29306 9.93385Z"
      fill="#FEA832"
    />
    <Path
      d="M1.40929 10.844L0.855432 11.804C0.723352 11.6421 0.605481 11.4831 0.503235 11.3282L0.939221 10.5713L1.40929 10.844ZM1.88361 12.8663C2.02083 12.9889 2.16051 13.1087 2.30255 13.2256L2.83082 12.311L2.36075 12.0398L1.88361 12.8663ZM3.45148 14.0806C3.60183 14.1819 3.7538 14.2809 3.90734 14.3774L4.41149 13.504L3.94 13.2342L3.45148 14.0806ZM5.13722 15.0889C5.29832 15.1733 5.46072 15.2552 5.62438 15.3346L6.1129 14.4881L5.64142 14.2155L5.13722 15.0889ZM6.938 15.9012C7.11016 15.9667 7.28395 16.0278 7.45919 16.0844L7.93639 15.2579L7.4649 14.9881L6.938 15.9012ZM8.89215 16.4451C9.09952 16.4778 9.29547 16.5005 9.48151 16.5119L9.91749 15.7563L9.44742 15.4837L8.89215 16.4451Z"
      fill="#C85929"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M11.7581 20.1051C11.1332 19.0215 13.0902 16.7194 16.1322 14.9627C19.1742 13.2074 22.1467 12.662 22.7729 13.7456C23.1202 14.3467 23.4671 14.9479 23.8139 15.5492C24.4402 16.6342 22.4818 18.9363 19.4412 20.693C16.3992 22.4484 13.4253 22.9937 12.799 21.9087C12.4523 21.3074 12.1053 20.7062 11.7581 20.1051Z"
      fill="#FE9923"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M16.1322 14.9627C19.1742 13.2074 22.1467 12.662 22.7729 13.7456C23.3992 14.8306 21.4408 17.1327 18.3988 18.8894C15.3582 20.6448 12.3844 21.1901 11.7581 20.1051C11.1332 19.0216 13.0902 16.7195 16.1322 14.9627Z"
      fill="#FECD3D"
    />
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M16.6619 15.88C19.0819 14.4826 21.3144 13.8194 21.6467 14.396C21.9805 14.9739 20.2891 16.5745 17.869 17.9719C15.4491 19.368 13.218 20.0326 12.8842 19.456C12.5505 18.878 14.2419 17.2775 16.6619 15.88Z"
      fill="#FEA832"
    />
    <Path
      d="M22.5457 16.7917L23.101 17.7518C23.2263 17.5987 23.3438 17.4394 23.4532 17.2746L23.0172 16.519L22.5457 16.7917ZM22.0728 18.8126C21.9354 18.9356 21.7952 19.0554 21.6524 19.1719L21.1241 18.2573L21.5956 17.9875L22.0728 18.8126ZM20.5049 20.0269C20.3544 20.1286 20.2025 20.228 20.049 20.3251L19.5449 19.4517L20.0164 19.1805L20.5049 20.0269ZM18.8177 21.0352C18.6571 21.1196 18.4952 21.2015 18.332 21.2809L17.8435 20.4344L18.3135 20.1618L18.8177 21.0352ZM17.0184 21.8489C16.8457 21.9129 16.6719 21.974 16.4972 22.0321L16.02 21.2041L16.49 20.9343L17.0184 21.8489ZM15.0642 22.3915C14.8568 22.4255 14.6594 22.4468 14.4748 22.4582L14.0388 21.7027L14.5089 21.43L15.0642 22.3915Z"
      fill="#C85929"
    />
    <Path
      d="M10.5381 5.07812V5.88623H11.3462V6.58779H10.5381V7.39727H9.83656V6.58779H9.02704V5.88623H9.83656V5.07812H10.5381ZM8.03861 18.04V18.8481H8.84808V19.5497H8.03861V20.3592H7.33705V19.5497H6.52899V18.8481H7.33705V18.04H8.03861ZM24.1661 10.1141V10.9221H24.9756V11.6237H24.1661V12.4332H23.4645V11.6237H22.6564V10.9221H23.4645V10.1141H24.1661Z"
      fill="#FEA832"
    />
  </Svg>
)
const Boxing = ({ ...props }: Props) => (
  <Svg width={25} height={25} viewBox="0 0 25 25" fill="none" {...props}>
    <G clipPath="url(#clip0_248_2366)">
      <Path
        d="M21.9827 18.7499C20.2586 19.612 20.2586 22.3361 20.2586 22.3361C20.2586 22.3361 15.0862 17.1637 12.5 24.0603C9.91376 17.1637 4.74134 22.3361 4.74134 22.3361C4.74134 22.3361 4.74135 19.612 3.01721 18.7499C0.711173 17.5991 4.26721 8.47407 4.26721 8.47407C5.89221 7.01717 5.50428 3.93959 4.74566 2.37493C4.93531 2.56028 9.96117 7.41372 12.5 0.646484C15.0388 7.41372 20.0646 2.56028 20.2543 2.37493C19.4957 3.93959 19.1077 7.01717 20.7327 8.47407C20.7327 8.47407 24.2888 17.5991 21.9827 18.7499Z"
        fill="#F3D55B"
      />
      <Path
        d="M5.89222 18.4613L4.12498 20.2286C4.04762 20.3064 3.95562 20.3683 3.85427 20.4104C3.75293 20.4526 3.64424 20.4743 3.53446 20.4743C3.42469 20.4743 3.316 20.4526 3.21466 20.4104C3.11331 20.3683 3.02131 20.3064 2.94395 20.2286L0.288775 17.5734C0.13347 17.4161 0.0463867 17.2039 0.0463867 16.9829C0.0463867 16.7618 0.13347 16.5497 0.288775 16.3924L0.573257 16.1079L1.18102 15.5001L2.05602 14.6294L3.90084 16.4743L5.08188 17.651L5.89222 18.4613ZM11.4008 14.7113C11.1514 14.9465 10.8586 15.1309 10.5388 15.2544C9.31895 15.7458 7.77153 15.3967 6.60343 14.5518C5.1336 13.4872 4.26291 11.6381 5.38791 9.67684C5.5586 9.37081 5.76248 9.0846 5.99567 8.82339C6.35066 8.3809 6.8423 8.06855 7.39368 7.93518C7.94507 7.80182 8.52512 7.85497 9.04308 8.08633C9.78234 8.39889 10.4498 8.85949 11.0043 9.43977C11.5119 9.92147 11.9217 10.4967 12.2112 11.1337C12.6465 12.1381 12.7457 13.457 11.4008 14.7113Z"
        fill="#E64C3C"
      />
      <Path
        d="M10.5388 15.2545C9.46981 16.276 7.73274 17.9226 5.89222 18.4614L5.08188 17.651L3.90084 16.4743L2.05602 14.6295C2.05602 14.6295 1.48705 10.6467 3.76291 8.37083C5.02153 7.11652 5.68102 7.84066 5.99567 8.82342C5.76242 9.08477 5.55861 9.37098 5.38791 9.67687C4.26291 11.6381 5.1336 13.4872 6.60343 14.5519C7.77153 15.3967 9.31895 15.7458 10.5388 15.2545Z"
        fill="#C03A2B"
      />
      <Path
        d="M2.95686 17.8836C2.87515 17.9638 2.76527 18.0086 2.65083 18.0086C2.53638 18.0086 2.4265 17.9638 2.34479 17.8836L0.577553 16.1164C0.573242 16.1121 0.573242 16.1121 0.573242 16.1078L1.181 15.5L1.18962 15.5086L2.95686 17.2759C3.03714 17.3566 3.0822 17.4659 3.0822 17.5797C3.0822 17.6936 3.03714 17.8029 2.95686 17.8836Z"
        fill="#F9EAB0"
      />
      <Path
        d="M24.7586 17.5734L22.0991 20.2286C22.0222 20.3064 21.9305 20.3682 21.8296 20.4104C21.7286 20.4526 21.6202 20.4743 21.5107 20.4743C21.4013 20.4743 21.2929 20.4526 21.1919 20.4104C21.0909 20.3682 20.9993 20.3064 20.9224 20.2286L19.1551 18.4613L19.9655 17.651L21.1422 16.4743L22.987 14.6294L22.9913 14.6251L24.7586 16.3924C25.0819 16.7199 25.0819 17.2458 24.7586 17.5734ZM18.4396 14.5518C17.2715 15.3967 15.7241 15.7458 14.5043 15.2544C14.1844 15.1309 13.8917 14.9465 13.6422 14.7113C12.3017 13.457 12.4008 12.138 12.8362 11.1337C13.1257 10.4967 13.5355 9.92147 14.0431 9.43977C14.5976 8.85949 15.265 8.39889 16.0043 8.08632C16.5223 7.85534 17.1022 7.80239 17.6535 7.93573C18.2048 8.06907 18.6965 8.3812 19.0517 8.82339C19.2821 9.08601 19.4844 9.37206 19.6551 9.67684C20.7801 11.638 19.9094 13.4872 18.4396 14.5518Z"
        fill="#3B97D3"
      />
      <Path
        d="M22.987 14.6295L21.1422 16.4743L19.9655 17.651L19.1551 18.4614C17.3103 17.9226 15.5732 16.276 14.5043 15.2545C15.7241 15.7458 17.2715 15.3967 18.4396 14.5519C19.9094 13.4872 20.7801 11.6381 19.6551 9.67687C19.4844 9.37208 19.2821 9.08604 19.0517 8.82342C19.362 7.84066 20.0258 7.11652 21.2801 8.37083C23.556 10.6467 22.987 14.6295 22.987 14.6295Z"
        fill="#2980BA"
      />
      <Path
        d="M24.4741 16.1078L24.4655 16.1164L22.6982 17.8836C22.6582 17.9239 22.6105 17.9558 22.5579 17.9772C22.5054 17.9987 22.449 18.0094 22.3922 18.0086C22.3361 18.0093 22.2804 17.9986 22.2285 17.9771C22.1766 17.9557 22.1297 17.9238 22.0905 17.8836C22.0102 17.8029 21.9651 17.6936 21.9651 17.5797C21.9651 17.4659 22.0102 17.3566 22.0905 17.2759L23.8577 15.5086L23.8664 15.5L24.4741 16.1078Z"
        fill="#F9EAB0"
      />
      <Path
        d="M6.88531 10.9653C6.80961 10.9654 6.73523 10.9455 6.66965 10.9077C6.60406 10.8699 6.54959 10.8155 6.51171 10.75C6.47383 10.6845 6.45388 10.6101 6.45386 10.5344C6.45384 10.4587 6.47376 10.3843 6.51161 10.3188C6.95902 9.53947 7.42971 9.16016 7.95083 9.16016C8.16592 9.16533 8.37798 9.21016 8.57712 9.29205C8.6313 9.31135 8.68107 9.3413 8.7235 9.38013C8.76592 9.41897 8.80015 9.4659 8.82416 9.51816C8.84817 9.57042 8.86148 9.62696 8.8633 9.68445C8.86512 9.74194 8.85541 9.7992 8.83476 9.85288C8.81411 9.90656 8.78292 9.95556 8.74303 9.997C8.70315 10.0384 8.65537 10.0715 8.60252 10.0942C8.54967 10.1169 8.49282 10.1287 8.4353 10.1291C8.37779 10.1295 8.32078 10.1184 8.26764 10.0964C8.16734 10.0528 8.06002 10.0277 7.95083 10.0222C7.81807 10.0222 7.56635 10.2132 7.26117 10.7481C7.22335 10.8143 7.16862 10.8693 7.10259 10.9075C7.03656 10.9456 6.96158 10.9656 6.88531 10.9653Z"
        fill="white"
      />
      <Path
        d="M16.3504 4.66427C16.0933 4.66473 15.8368 4.63771 15.5853 4.58367C14.3211 4.31039 13.2858 3.35565 12.5 1.74229C11.7142 3.35565 10.6789 4.30953 9.41466 4.58367C6.92069 5.12289 4.53707 2.77548 4.43664 2.67548C4.35807 2.59424 4.31454 2.48539 4.31544 2.37237C4.31634 2.25935 4.3616 2.15121 4.44146 2.07124C4.52132 1.99126 4.6294 1.94586 4.74242 1.94479C4.85543 1.94373 4.96434 1.9871 5.04569 2.06556C5.06725 2.08712 7.19742 4.18324 9.23492 3.74056C10.4233 3.48194 11.3858 2.3897 12.0961 0.495305C12.1268 0.412958 12.182 0.341963 12.2541 0.291835C12.3263 0.241708 12.4121 0.214844 12.5 0.214844C12.5879 0.214844 12.6737 0.241708 12.7459 0.291835C12.818 0.341963 12.8732 0.412958 12.9039 0.495305C13.6142 2.3897 14.5767 3.48151 15.7651 3.74056C17.8017 4.18108 19.9328 2.08668 19.9543 2.06556C20.0357 1.9871 20.1446 1.94373 20.2576 1.94479C20.3706 1.94586 20.4787 1.99126 20.5585 2.07124C20.6384 2.15121 20.6837 2.25935 20.6846 2.37237C20.6855 2.48539 20.6419 2.59424 20.5634 2.67548C20.4741 2.76556 18.5466 4.66427 16.3504 4.66427ZM12.5 24.4914C12.4122 24.4915 12.3265 24.4647 12.2543 24.4147C12.1821 24.3647 12.1269 24.2939 12.0961 24.2117C11.3858 22.3151 10.4233 21.2255 9.23492 20.9664C7.19699 20.5255 5.06725 22.6199 5.04569 22.6414C4.96434 22.7199 4.85543 22.7633 4.74242 22.7622C4.6294 22.7611 4.52132 22.7157 4.44146 22.6357C4.3616 22.5558 4.31634 22.4476 4.31544 22.3346C4.31454 22.2216 4.35807 22.1127 4.43664 22.0315C4.53664 21.9311 6.92069 19.5832 9.41466 20.1233C10.6789 20.3975 11.7142 21.3513 12.5 22.9643C13.2858 21.3513 14.3211 20.3975 15.5853 20.1233C18.0797 19.5841 20.4634 21.9337 20.5634 22.0315C20.6419 22.1127 20.6855 22.2216 20.6846 22.3346C20.6837 22.4476 20.6384 22.5558 20.5585 22.6357C20.4787 22.7157 20.3706 22.7611 20.2576 22.7622C20.1446 22.7633 20.0357 22.7199 19.9543 22.6414C19.9328 22.6203 17.8022 20.5238 15.7651 20.9664C14.5767 21.225 13.6142 22.3169 12.9039 24.2117C12.8731 24.2939 12.8179 24.3647 12.7457 24.4147C12.6735 24.4647 12.5878 24.4915 12.5 24.4914Z"
        fill="#F0C419"
      />
    </G>
    <Defs>
      <ClipPath id="clip0_248_2366">
        <Rect width={25} height={25} fill="white" />
      </ClipPath>
    </Defs>
  </Svg>
)

const UserOutline = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    fill={fill}
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    viewBox="-5 -2 24 24"
    preserveAspectRatio="xMinYMin"
    // @ts-ignore
    className="jam jam-bookmark"
    {...props}
  >
    <Path d="M3 2a1 1 0 0 0-1 1v15l2.978-2.717a3 3 0 0 1 4.044 0L12 18V3a1 1 0 0 0-1-1H3zm0-2h8a3 3 0 0 1 3 3v15a2 2 0 0 1-3.348 1.477L7.674 16.76a1 1 0 0 0-1.348 0l-2.978 2.717A2 2 0 0 1 0 18V3a3 3 0 0 1 3-3z" />
  </Svg>
)
const BookmarkEmotion = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    fill={fill}
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    viewBox="0 0 24 24"
    // @ts-ignore
    enableBackground="new 0 0 24 24"
    {...props}
  >
    <Path d="M16,2H8C6.3,2,5,3.3,5,5v16c0,0.2,0,0.3,0.1,0.5C5.4,22,6,22.1,6.5,21.9l5.5-3.2l5.5,3.2C17.7,22,17.8,22,18,22c0.6,0,1-0.4,1-1V5C19,3.3,17.7,2,16,2z" />
  </Svg>
)

const BookmarkEmotionOutline = ({
  fill = initialState.fill,
  stroke = initialState.stroke,
  ...props
}: Props) => (
  <Svg
    fill={fill}
    width={props.size || props.width || 20}
    height={props.size || props.height || 20}
    viewBox="-5 -2 24 24"
    preserveAspectRatio="xMinYMin"
    // @ts-ignore
    className="jam jam-bookmark"
    {...props}
  >
    <Path d="M3 2a1 1 0 0 0-1 1v15l2.978-2.717a3 3 0 0 1 4.044 0L12 18V3a1 1 0 0 0-1-1H3zm0-2h8a3 3 0 0 1 3 3v15a2 2 0 0 1-3.348 1.477L7.674 16.76a1 1 0 0 0-1.348 0l-2.978 2.717A2 2 0 0 1 0 18V3a3 3 0 0 1 3-3z" />
  </Svg>
)
const QuestionIcon = (props: Props) => (
  <Svg width={20} height={20} fill="none" {...props}>
    <Path
      fill="url(#a)"
      fillRule="evenodd"
      d="M8.148 2.5h.925c2.622 0 4.82 1.838 5.404 4.31.102.432.153.873.153 1.315 0 3.107-2.488 5.625-5.556 5.625H3.518a1.863 1.863 0 0 1-1.851-1.875V9.062c0-3.624 2.901-6.562 6.481-6.562Zm-.856 4.167a1.042 1.042 0 1 1 1.041 1.041.625.625 0 0 0 0 1.25 2.292 2.292 0 1 0-2.291-2.291.625.625 0 1 0 1.25 0Zm1.875 4.166a.833.833 0 1 1-1.667 0 .833.833 0 0 1 1.667 0Zm1.759 6.667a5.533 5.533 0 0 1-4.62-2.5h2.768c3.774 0 6.806-3.092 6.806-6.875 0-.157-.006-.313-.016-.467a6.58 6.58 0 0 1 2.47 5.154v2.813c0 1.036-.83 1.875-1.852 1.875h-5.556Z"
      clipRule="evenodd"
    />
    <Defs>
      <LinearGradient
        id="a"
        x1={10}
        x2={10}
        y1={2.5}
        y2={17.5}
        gradientUnits="userSpaceOnUse"
      >
        <Stop stopColor="#FD6700" />
        <Stop offset={1} stopColor="#FFCE00" />
      </LinearGradient>
    </Defs>
  </Svg>
)

const LighterIcon = (props: Props) => (
  <Svg width={20} height={20} fill="none" {...props}>
    <G fill="#F4B80A" stroke="#F4B80A" strokeWidth={0.4} clipPath="url(#a)">
      <Path d="M13.855 5.695a5.385 5.385 0 0 0-3.784-1.61 5.383 5.383 0 0 0-3.86 1.553 5.377 5.377 0 0 0-1.63 3.824A5.433 5.433 0 0 0 7.297 14.2a.958.958 0 0 1 .472.831v2.122c0 1.23 1 2.232 2.231 2.232 1.23 0 2.231-1.001 2.231-2.232v-2.129c0-.34.184-.657.48-.829a5.439 5.439 0 0 0 2.708-4.692 5.386 5.386 0 0 0-1.564-3.808Zm-2.261 11.458c0 .879-.715 1.594-1.594 1.594a1.596 1.596 0 0 1-1.594-1.594v-.319h3.188v.32Zm.798-3.51a1.601 1.601 0 0 0-.798 1.381v1.173H8.406V15.03c0-.572-.303-1.102-.79-1.383a4.794 4.794 0 0 1-2.397-4.181 4.744 4.744 0 0 1 1.438-3.374 4.746 4.746 0 0 1 3.405-1.37c2.602.033 4.72 2.177 4.72 4.78a4.8 4.8 0 0 1-2.39 4.14Z" />
      <Path d="M12.313 6.474a.319.319 0 0 0-.425.475 3.511 3.511 0 0 1 1.169 2.613c0 .996-.426 1.948-1.169 2.613a.32.32 0 0 0 .425.475 4.15 4.15 0 0 0 1.381-3.088 4.15 4.15 0 0 0-1.38-3.088ZM10 3.396a.319.319 0 0 0 .319-.319V.935a.319.319 0 0 0-.638 0v2.142a.319.319 0 0 0 .319.319Zm4.544 1.882a.317.317 0 0 0 .225-.093l1.515-1.515a.319.319 0 0 0-.45-.45l-1.516 1.514a.32.32 0 0 0 .226.544Zm4.024 3.906h-2.142a.319.319 0 1 0 0 .638h2.142a.319.319 0 0 0 0-.638Zm-14.675.319a.319.319 0 0 0-.319-.319H1.432a.319.319 0 1 0 0 .638h2.142a.319.319 0 0 0 .319-.319ZM5.23 5.184a.318.318 0 0 0 .544-.225.319.319 0 0 0-.093-.225L4.167 3.219a.319.319 0 0 0-.45.45L5.23 5.185Zm9.538 8.637a.319.319 0 0 0-.45.451l1.514 1.515a.318.318 0 0 0 .52-.104.319.319 0 0 0-.07-.347l-1.514-1.515Zm-9.538 0-1.515 1.515a.319.319 0 0 0 .45.45l1.516-1.514a.319.319 0 1 0-.451-.45Z" />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h20v20H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const CheckSmallIcon = (props: Props) => (
  <Svg
    width={props.size || props.width || 17}
    height={props.size || props.height || 17}
    fill="none"
    {...props}
  >
    <Path
      fill="#FFC107"
      stroke="#fff"
      strokeWidth={2}
      d="M8.917 15.983a7.052 7.052 0 1 0 0-14.103 7.052 7.052 0 0 0 0 14.103Z"
    />
    <Path
      fill="#fff"
      fillRule="evenodd"
      d="M12.136 6.765c.213.204.22.542.016.755l-3.758 3.918a.534.534 0 0 1-.78-.01L5.671 9.29a.534.534 0 0 1 .791-.718l1.556 1.713 3.362-3.504a.534.534 0 0 1 .755-.016Z"
      clipRule="evenodd"
    />
  </Svg>
)

const IconLockSmall = (props: Props) => (
  <Svg width={20} height={20} fill="none" {...props}>
    <Path
      fill="#E4E700"
      fillRule="evenodd"
      d="M10 1.333c-2.761 0-5 2.409-5 5.38V8h-.254c-.736 0-1.373.594-1.4 1.33-.1 2.812.21 8.67 6.654 8.67 6.43 0 6.753-5.864 6.654-8.67-.026-.735-.662-1.33-1.398-1.33H15V6.712c0-2.97-2.239-5.378-5-5.378ZM13.571 8V6.712c0-2.122-1.599-3.842-3.571-3.842-1.973 0-3.571 1.72-3.571 3.842V8h7.142Zm-3.214 4.939c.408-.148.7-.544.7-1.01 0-.592-.471-1.072-1.053-1.072-.58 0-1.052.48-1.052 1.072 0 .467.293.864.703 1.01v1.139a.35.35 0 1 0 .702 0v-1.14Z"
      clipRule="evenodd"
    />
  </Svg>
)

const IconLanguage = (props: Props) => (
  <Svg width={24} height={24} fill="none" {...props}>
    <Path
      stroke="#000"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M2 12c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2 2 6.477 2 12Z"
    />
    <Path
      stroke="#000"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M13 2.05S16 6 16 12c0 6-3 9.95-3 9.95m-2 0S8 18 8 12c0-6 3-9.95 3-9.95M2.63 15.5h18.74m-18.74-7h18.74"
    />
  </Svg>
)

const IconFlagVietnam = (props: Props) => (
  <Svg width={24} height={24} fill="none" {...props}>
    <G clipPath="url(#a)">
      <Path
        fill="#F42F4C"
        d="M12 23.25c6.213 0 11.25-5.037 11.25-11.25S18.213.75 12 .75.75 5.787.75 12 5.787 23.25 12 23.25Z"
      />
      <Path
        fill="#FFE62E"
        d="m12 14.625 3.713 2.625-1.388-4.275L18 10.2h-4.575L12 6l-1.387 4.2H6l3.675 2.775-1.388 4.275L12 14.625Z"
      />
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const IconUsFlag = (props: Props) => (
  <Svg width={24} height={24} fill="none" {...props}>
    <G clipPath="url(#a)">
      <Mask
        id="b"
        width={24}
        height={24}
        x={0}
        y={0}
        maskUnits="userSpaceOnUse"
        style={{
          maskType: 'luminance',
        }}
      >
        <Path
          fill="#fff"
          d="M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12Z"
        />
      </Mask>
      <G mask="url(#b)">
        <Path
          fill="#EEE"
          d="M12 0h12v3l-1.5 1.5L24 6v3l-1.5 1.5L24 12v3l-1.5 1.5L24 18v3l-12 1.5L0 21v-3l1.5-1.5L0 15v-3L12 0Z"
        />
        <Path
          fill="#D80027"
          d="M10.5 3H24v3H10.5V3Zm0 6H24v3H12l-1.5-3ZM0 15h24v3H0v-3Zm0 6h24v3H0v-3Z"
        />
        <Path fill="#0052B4" d="M0 0h12v12H0V0Z" />
        <Path
          fill="#EEE"
          d="m8.766 11.39 2.671-1.921h-3.28l2.671 1.922L9.797 8.25l-1.031 3.14Zm-3.797 0L7.64 9.47H4.359l2.672 1.922L6 8.25l-1.031 3.14Zm-3.797 0L3.844 9.47H.563l2.671 1.922-1.03-3.141-1.032 3.14Zm7.594-3.796 2.671-1.922h-3.28l2.671 1.922-1.031-3.14-1.031 3.14Zm-3.797 0L7.64 5.672H4.359l2.672 1.922L6 4.454l-1.031 3.14Zm-3.797 0 2.672-1.922H.563l2.671 1.922-1.03-3.14-1.032 3.14ZM8.766 3.75l2.671-1.922h-3.28l2.671 1.922L9.797.61 8.766 3.75Zm-3.797 0L7.64 1.828H4.359L7.031 3.75 6 .61 4.969 3.75Zm-3.797 0 2.672-1.922H.563L3.233 3.75 2.204.61 1.171 3.75Z"
        />
      </G>
    </G>
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h24v24H0z" />
      </ClipPath>
    </Defs>
  </Svg>
)

const IconCheckNormal = (props: Props) => (
  <Svg width={24} height={24} fill="none" {...props}>
    <Path
      fill={props.fill || '#000'}
      fillRule="evenodd"
      d="M19.17 6.93a1.125 1.125 0 0 1 0 1.59l-9.146 9.146a1.124 1.124 0 0 1-1.603-.014l-3.604-3.726a1.125 1.125 0 1 1 1.617-1.565l2.809 2.904L17.58 6.93a1.125 1.125 0 0 1 1.59 0Z"
      clipRule="evenodd"
    />
  </Svg>
)

const Icons = {
  LeftArrow: {
    state: 'LeftArrow',
    icon: LeftArrow,
  },
  RightArrow: {
    state: 'RightArrow',
    icon: RightArrow,
  },
  Profile: {
    state: 'Profile',
    icon: Profile,
  },
  Microphone: {
    state: 'Microphone',
    icon: Microphone,
  },
  SendPaper: {
    state: 'SendPaper',
    icon: SendPaper,
  },
  Setting: {
    state: 'Setting',
    icon: Setting,
  },
  MenuHeading: {
    state: 'MenuHeading',
    icon: MenuHeading,
  },
  Comment: {
    state: 'Comment',
    icon: Comment,
  },
  MuteAudio: {
    state: 'MuteAudio',
    icon: MuteAudio,
  },
  WaveAudio: {
    state: 'WaveAudio',
    icon: WaveAudio,
  },
  Bookmark: {
    state: 'Bookmark',
    icon: Bookmark,
  },
  Player: {
    state: 'Player',
    icon: Player,
  },
  RePlay: {
    state: 'RePlay',
    icon: RePlay,
  },
  DisLike: {
    state: 'DisLike',
    icon: DisLike,
  },
  Like: {
    state: 'Like',
    icon: Like,
  },
  Cancel: {
    state: 'Cancel',
    icon: Cancel,
  },
  SendComment: {
    state: 'SendComment',
    icon: SendComment,
  },
  PenBrush: {
    state: 'PenBrush',
    icon: PenBrush,
  },
  Password: {
    state: 'Password',
    icon: Password,
  },
  Crown: {
    state: 'Crown',
    icon: Crown,
  },
  Notification: {
    state: 'Notification',
    icon: Notification,
  },
  Agree: {
    state: 'Agree',
    icon: Agree,
  },
  Lock: {
    state: 'Lock',
    icon: Lock,
  },
  StartFill: {
    state: 'StartFill',
    icon: StartFill,
  },
  StartOutLine: {
    state: 'StartOutLine',
    icon: StartOutLine,
  },
  Logout: {
    state: 'Logout',
    icon: Logout,
  },
  About: {
    state: 'About',
    icon: About,
  },
  History: {
    state: 'History',
    icon: History,
  },
  Dictionary: {
    state: 'Dictionary',
    icon: Dictionary,
  },
  ShowPassword: {
    state: 'ShowPassword',
    icon: ShowPassword,
  },
  HidePassword: {
    state: 'HidePassword',
    icon: HidePassword,
  },
  BackGame: {
    state: 'BackGame',
    icon: BackGame,
  },
  Back: {
    state: 'Back',
    icon: Back,
  },
  Home: {
    state: 'Home',
    icon: Home,
  },
  Dumbell: {
    state: 'Dumbell',
    icon: Dumbell,
  },
  GamePad: {
    state: 'GamePad',
    icon: GamePad,
  },
  User: {
    state: 'User',
    icon: User,
  },
  Tree: {
    state: 'Tree',
    icon: Tree,
  },
  Fire: {
    state: 'Fire',
    icon: Fire,
  },
  LearnBook: {
    state: 'LearnBook',
    icon: LearnBook,
  },
  TaskFlag: {
    state: 'TaskFlag',
    icon: TaskFlag,
  },
  DictionaryColorized: {
    state: 'DictionaryColorized',
    icon: DictionaryColorized,
  },
  Video: {
    state: 'Video',
    icon: Video,
  },
  Delete: {
    state: 'Delete',
    icon: Delete,
  },
  QuestionMark: {
    state: 'QuestionMark',
    icon: QuestionMark,
  },
  QuestionCircle: {
    state: 'QuestionCircle',
    icon: QuestionCircle,
  },
  Check: {
    state: 'Check',
    icon: CheckIcon,
  },
  IncorrectIcon: {
    state: 'IncorrectIcon',
    icon: IncorrectIcon,
  },
  BookmarkEmotion: {
    state: 'BookmarkEmotion',
    icon: BookmarkEmotion,
  },
  BookmarkEmotionOutline: {
    state: 'BookmarkEmotionOutline',
    icon: BookmarkEmotionOutline,
  },
  Present: {
    state: 'Present',
    icon: Present,
  },
  Honey: {
    state: 'Honey',
    icon: Honey,
  },
  GoButton: {
    state: 'GoButton',
    icon: GoButton,
  },
  StreakFlame: {
    state: 'StreakFlame',
    icon: StreakFlame,
  },
  Money: {
    state: 'Money',
    icon: Money,
  },
  Boxing: {
    state: 'Boxing',
    icon: Boxing,
  },
  UserOutline: {
    state: 'UserOutline',
    icon: UserOutline,
  },
  Question: {
    state: 'Question',
    icon: QuestionIcon,
  },
  Lighter: {
    state: 'Lighter',
    icon: LighterIcon,
  },
  CheckSmall: {
    state: 'CheckSmall',
    icon: CheckSmallIcon,
  },
  IconLockSmall: {
    state: 'IconLockSmall',
    icon: IconLockSmall,
  },
  Language: {
    state: 'Language',
    icon: IconLanguage,
  },
  VietNamFlag: {
    state: 'VietNam',
    icon: IconFlagVietnam,
  },
  UsFlag: {
    state: 'UsFlag',
    icon: IconUsFlag,
  },
  CheckNormal: {
    state: 'CheckNormal',
    icon: IconCheckNormal,
  },
}

export type TIcon = keyof typeof Icons

interface PropsIcon extends Props {
  state: TIcon
}

export const Icon: React.FC<PropsIcon> = ({ state, ...props }) => {
  return Icons[state].icon(props)
}

export {
  LeftArrow,
  RightArrow,
  Profile,
  Microphone,
  SendPaper,
  Setting,
  MenuHeading,
  Comment,
  MuteAudio,
  WaveAudio,
  Bookmark,
  Player,
  RePlay,
  DisLike,
  Like,
  Cancel,
  SendComment,
  PenBrush,
  Password,
  Crown,
  Notification,
  Agree,
  Lock,
  StartFill,
  StartOutLine,
  Logout,
  About,
  History,
  Dictionary,
  ShowPassword,
  HidePassword,
  BackGame,
  Home,
  Dumbell,
  GamePad,
  User,
  Tree,
  Fire,
  LearnBook,
  TaskFlag,
  DictionaryColorized,
  Video,
  Delete,
  QuestionMark,
  QuestionCircle,
  CheckIcon,
  IncorrectIcon,
  Present,
  Honey,
  GoButton,
  StreakFlame,
  Money,
  Boxing,
  UserOutline,
  QuestionIcon,
  LighterIcon,
  CheckSmallIcon,
  IconLockSmall,
  IconLanguage,
  IconFlagVietnam,
  IconUsFlag,
  IconCheckNormal,
}
